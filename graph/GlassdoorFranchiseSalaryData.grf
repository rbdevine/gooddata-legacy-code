<?xml version="1.0" encoding="UTF-8"?><Graph author="scalvillo" created="Fri Jun 10 20:56:50 EDT 2016" guiVersion="3.4.4.P" id="1466014046265" licenseType="Commercial" modified="Tue Jan 03 13:16:05 EST 2017" modifiedBy="scalvillo" name="Complete County File" revision="1.228" showComponentDetails="true">
<Global>
<Metadata id="Metadata1" previewAttachment="${DATA_TMP_DIR}/gdfranchisepay.txt" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," label="FRANCHISEPAY_READ" name="FRANCHISEPAY_READ" previewAttachment="${DATA_TMP_DIR}/gdfranchisepay.txt" previewAttachmentCharset="ISO-8859-1" quoteChar="both" quotedStrings="false" recordDelimiter="\r\n" skipSourceRows="1" type="delimited">
<Field name="COMPANY" type="string"/>
<Field name="AREA" type="string"/>
<Field name="STATE" type="string"/>
<Field name="JOBTITLE" type="string"/>
<Field name="REVIEWCOUNT" type="string"/>
<Field name="MIN" type="string"/>
<Field name="MAX" type="string"/>
<Field name="RANGE" type="string"/>
<Field eofAsDelimiter="false" name="UNIT" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata2" previewAttachment="${DATA_TMP_DIR}/gdfranchisepay.txt" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" label="FRANCHISEPAY_READ" name="FRANCHISEPAY_WRITE" previewAttachmentCharset="ISO-8859-1" quoteChar="both" quotedStrings="false" recordDelimiter="\r\n" skipSourceRows="1" type="delimited">
<Field name="COMPANY" type="string"/>
<Field name="AREA" type="string"/>
<Field name="STATE" type="string"/>
<Field name="JOBTITLE" type="string"/>
<Field name="REVIEWCOUNT" type="string"/>
<Field name="MIN" type="string"/>
<Field name="MAX" type="string"/>
<Field name="RANGE" type="string"/>
<Field eofAsDelimiter="false" name="UNIT" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/glassdoor/franchise/gdfranchisepay.txt"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/gdfranchisepayerror.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/gdfranchisepay.txt"/>
<Property id="GraphParameter3" name="TABLENAME" value="STG_GLASSDOORFRANCHISEPAY"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter19" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/glassdoorpay.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="280" guiY="27" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="CSV Reader" guiX="63" guiY="129" id="CSV_READER" quotedStrings="true" skipRows="0" skipSourceRows="1" trim="true" type="DATA_READER" verbose="false"/>
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="474" guiY="129" id="CSV_WRITER" quotedStrings="false" type="DATA_WRITER"/>
<Node enabled="enabled" guiName="Reformat" guiX="280" guiY="129" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.COMPANY = $in.0.COMPANY;
	$out.0.AREA = $in.0.AREA;
	$out.0.STATE = $in.0.STATE;
	$out.0.JOBTITLE = $in.0.JOBTITLE;
	$out.0.REVIEWCOUNT = $in.0.REVIEWCOUNT;
	$out.0.MIN = replace(replace($in.0.MIN,"[$]",""),"[k]","");
	$out.0.MAX = replace(replace($in.0.MAX,"[$]",""),"[k]","");
	$out.0.RANGE = $in.0.RANGE;
    string unit = $in.0.UNIT;
	if (unit == null or unit == "null")  {
		$out.0.UNIT = "salary";
	}
	else {
		$out.0.UNIT = trim(unit);	
	}

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="CSV_READER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="DROP TABLE" guiX="63" guiY="245" id="DROP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="CREATE TABLE" guiX="280" guiY="245" id="CREATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
	COMPANY VARCHAR(255),
	AREA VARCHAR(255),
	STATE VARCHAR(255),
	JOBTITLE VARCHAR(255),
	REVIEWCOUNT VARCHAR(255),
	MIN VARCHAR(255),
	MAX VARCHAR(255),
    RANGE VARCHAR(255),
	UNIT VARCHAR(255)
	
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="POPULATE TABLE" guiX="473" guiY="245" id="POPULATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	COMPANY,
	AREA,
	STATE,
	JOBTITLE,
	REVIEWCOUNT,
	MIN,
	MAX,
    RANGE,
	UNIT

)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean download" guiX="63" guiY="334" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean error" guiX="280" guiY="334" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="disabled" guiName="Clean write" guiX="474" guiY="334" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
</Graph>
