<?xml version="1.0" encoding="UTF-8"?><Graph author="scalvillo" created="Fri Jun 10 20:56:50 EDT 2016" guiVersion="3.4.4.P" id="1466014046265" licenseType="Commercial" modified="Mon Aug 08 20:20:52 EDT 2016" modifiedBy="scalvillo" name="Complete County File" revision="1.266" showComponentDetails="true">
<Global>
<Metadata id="Metadata1" previewAttachment="/Users/scalvillo/Desktop/linkdln_job_postings.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" label="LINKEDIN_JOB_POSTINGS_READ" name="LINKEDIN_JOB_POSTINGS_READ" previewAttachment="/Users/scalvillo/Desktop/linkdln_job_postings.csv" previewAttachmentCharset="ISO-8859-1" quoteChar="both" quotedStrings="true" recordDelimiter="\r\n" skipSourceRows="0" type="delimited">
<Field name="COMPANYTICKER" type="string"/>
<Field name="LINKEDINCOMPANYNAME" type="string"/>
<Field name="LINKEDINCOMPANYID" type="string"/>
<Field name="JOBLOCATION" type="string"/>
<Field name="JOBPOSTINGDATE" type="string"/>
<Field name="JOBTITLE" type="string"/>
<Field eofAsDelimiter="false" name="JOBURL" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" label="LINKEDIN_JOB_POSTINGS_READ" name="LINKEDIN_JOB_POSTINGS_WRITE" previewAttachmentCharset="ISO-8859-1" quoteChar="both" quotedStrings="false" recordDelimiter="\r\n" skipSourceRows="1" type="delimited">
<Field name="COMPANYTICKER" type="string"/>
<Field name="LINKEDINCOMPANYNAME" type="string"/>
<Field name="LINKEDINCOMPANYID" type="string"/>
<Field name="JOBLOCATION" type="string"/>
<Field name="JOBPOSTINGDATE" type="date"/>
<Field name="JOBTITLE" type="string"/>
<Field eofAsDelimiter="false" name="JOBURL" type="string"/>
<Field name="JUSTCITY" type="string"/>
<Field name="JUSTSTATEABBREV" type="string"/>
<Field name="JUSTSTATENAME" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/linkedin/linkdln_job_postings.csv"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/linkedinjobpostingerror.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/linkdln_job_postings.csv"/>
<Property id="GraphParameter3" name="TABLENAME" value="STG_LINKEDINJOBPOSTINGS"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter18" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/linkedinjobpostingwrite.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="disabled" guiName="File Download" guiX="280" guiY="27" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="CSV Reader" guiX="63" guiY="129" id="CSV_READER" quotedStrings="true" skipRows="1" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="474" guiY="129" id="CSV_WRITER" quotedStrings="false" type="DATA_WRITER"/>
<Node enabled="enabled" guiName="Reformat" guiX="280" guiY="129" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.COMPANYTICKER = $in.0.COMPANYTICKER;
	if ($in.0.LINKEDINCOMPANYNAME != null)
	{	
		$out.0.LINKEDINCOMPANYNAME = replace($in.0.LINKEDINCOMPANYNAME,"[|]","");
	}
	$out.0.LINKEDINCOMPANYID = $in.0.LINKEDINCOMPANYID;
	$out.0.JOBLOCATION = replace($in.0.JOBLOCATION,"[|]","");
	if ($in.0.JOBLOCATION != null)
	{
		string cityName = "";
		string state = "";
		string stateAbbrev = "";
		string stateName = "";
		string [] locationArray = null;
		
		string location = upperCase($in.0.JOBLOCATION);
		string companyName = upperCase($in.0.LINKEDINCOMPANYNAME);
		
		// special handling for Cognizant
		if (indexOf(location,",") > 0 && companyName != "COGNIZANT TECHNOLOGY SOLUTIONS")
		{
			locationArray = split(location,",");
			cityName = upperCase(trim(locationArray[0]));
			if (cityName == "NEW YORK CITY")
			{
				cityName = "NEW YORK";
			}
			else if (cityName == "O&#699;AHU" || cityName == "ISLAND OF HAWAI&LSQUO;I")
			{
				cityName = "HONOLULU";
			}
			if (length(locationArray) > 1)
			{
				// location format [CITY], [STATE ABBEV] and [CITY], [STATE NAME]
				state = upperCase(trim(locationArray[1]));
				if (length(state) > 2)
				{
					//handles case where statename is actually US-STATE ABBREV
					if(indexOf(state,"-") > 0)
					{
						string[] stateArray = split(state,"-");
						if(trim(stateArray[0]) == "US")
						{
							stateAbbrev =  trim(stateArray[1]);
						}
						else
						{
							stateName = state;
						}	
					}
					else
					{
						stateName = state;
					}
				}
				else
				{
					stateAbbrev = state;
				}
			}
		}
		else if (indexOf(location,"-") > 0)
		{
			locationArray = split(location,"-");
			if (length(locationArray) == 2)
			{
				//[STATE-ABBREV]-[CITY]
				cityName = upperCase(trim(locationArray[1]));
				stateAbbrev = upperCase(trim(locationArray[0]));
			}
			else if (length(locationArray) == 3)
			{
				if (trim(locationArray[0]) == "US")
				{
					//US-[STATE-ABBREV]-[CITY]
					cityName = upperCase(trim(locationArray[2]));
					stateAbbrev = upperCase(trim(locationArray[1]));
			
				}
				else
				{
					//[CITY]-[STATE-ABBREV]
					cityName = upperCase(trim(locationArray[0]));
					stateAbbrev = upperCase(trim(locationArray[1]));	
				}
			}
			else if(length(locationArray) == 4)
			{
				
				if(companyName != "COGNIZANT TECHNOLOGY SOLUTIONS")
				{
					//SF-Corporate-California-US
					cityName = upperCase(trim(locationArray[0]));
					if (cityName == "SF")
					{
						cityName = "SAN FRANCISCO";	
					}
					stateName = upperCase(trim(locationArray[2]));
				}
				else
				{
					// special handling for Cognizant
					cityName = upperCase(trim(locationArray[2]));
					string [] stateAbbrevArray  = split(locationArray[3],",");
					stateAbbrev = left(trim(stateAbbrevArray[0]),2);
				}
			}
		}
		else if (location == "ALBANY")
		{
			cityName = "ALBANY";
			stateAbbrev = "NY";
		}
		else if (location == "ALPHARETTA")
		{
			cityName = "ALPHARETTA";
			stateAbbrev = "GA";
		}
		else if (companyName == "AETNA" && location == "AMHERST")
		{
			cityName = "AMHERST";
			stateAbbrev = "NY";
		}
		else if (location == "ARLINGTON")
		{
			cityName = "ARLINGTON";
			stateAbbrev = "VA";
		}
		else if (location == "ATLANTA")
		{
			cityName = "ATLANTA";
			stateAbbrev = "GA";
		}
		else if (location == "BALTIMORE")
		{
			cityName = "BALTIMORE";
			stateAbbrev = "MD";
		}
		else if (location == "BATON ROUGE")
		{
			cityName = "BATON ROUGE";
			stateAbbrev = "LA";
		}
		else if (companyName == "AETNA" && location == "BEACHWOOD")
		{
			cityName = "BEACHWOOD";
			stateAbbrev = "OH";
		}
		else if (location == "BOSTON")
		{
			cityName = "BOSTON";
			stateAbbrev = "MA";
		}
		else if (location == "BLUE BELL")
		{
			cityName = "BLUE BELL";
			stateAbbrev = "PA";
		}
		else if (location == "CHANTILLY VIRGINIA")
		{
			cityName = "CHANTILLY";
			stateAbbrev = "VA";
		}
		else if (location == "CHARLESTON")
		{
			cityName = "CHARLESTON";
			stateAbbrev = "SC";
		}
		else if (location == "CHARLOTTESVILLE")
		{
			cityName = "CHARLOTTESVILLE";
			stateAbbrev = "VA";
		}
		else if (location == "CHICAGO")
		{
			cityName = "CHICAGO";
			stateAbbrev = "IL";
		}
		else if (location == "COLORADO SPRINGS COLORADO")
		{
			cityName = "COLORADO SPRINGS";
			stateAbbrev = "CO";
		}
		else if (location == "COLUMBIA")
		{
			cityName = "COLUMBIA";
			stateAbbrev = "SC";
		}
		else if (location == "COSTA MESA")
		{
			cityName = "COSTA MESA";
			stateAbbrev = "CA";
		}
		else if (location == "DALLAS")
		{
			cityName = "DALLAS";
			stateAbbrev = "TX";
		}
		else if (location == "DALLAS/FORT WORTH AREA")
		{
			cityName = "DALLAS";
			stateAbbrev = "TX";
		}
		else if (location == "DC")
		{
			cityName = "WASHINGTON";
			stateAbbrev = "DC";
		}
		else if (location == "DETROIT")
		{
			cityName = "DETROIT";
			stateAbbrev = "MI";
		}
		else if (location == "DOWNERS GROVE")
		{
			cityName = "DOWNERS GROVE";
			stateAbbrev = "IL";
		}
		else if (location == "FORT GREELY ALASKA")
		{
			cityName = "FORT GREELY";
			stateAbbrev = "AK";
		}
		else if (location == "FORT WALTON BEACH FLORIDA")
		{
			cityName = "FORT WALTON BEACH";
			stateAbbrev = "FL";
		}
		else if (companyName == "AETNA" && location == "FRANKLIN")
		{
			cityName = "FRANKLIN";
			stateAbbrev = "TN";
		}
		else if (location == "GREATER ATLANTA AREA")
		{
			cityName = "ATLANTA";
			stateAbbrev = "GA";
		}
		else if (location == "GREATER BOSTON AREA")
		{
			cityName = "BOSTON";
			stateAbbrev = "MA";
		}
		else if (location == "GREATER CHICAGO AREA")
		{
			cityName = "CHICAGO";
			stateAbbrev = "IL";
		}
		else if (location == "GREATER DENVER AREA")
		{
			cityName = "DENVER";
			stateAbbrev = "CO";
		}
		else if (location == "GREATER DETROIT AREA")
		{
			cityName = "DETROIT";
			stateAbbrev = "MI";
		}
		else if (location == "GREATER LOS ANGELES AREA")
		{
			cityName = "LOS ANGELES";
			stateAbbrev = "CA";
		}
		else if (location == "GREATER MEMPHIS AREA")
		{
			cityName = "MEMPHIS";
			stateAbbrev = "TN";
		}
		else if (location == "GREATER MILWAUKEE AREA")
		{
			cityName = "MILWAUKEE";
			stateAbbrev = "WI";
		}
		else if (location == "GREATER NEW YORK CITY AREA")
		{
			cityName = "NEW YORK";
			stateAbbrev = "NY";
		}
		else if (location == "GREATER OMAHA AREA")
		{
			cityName = "OMAHA";
			stateAbbrev = "NE";
		}
		else if (location == "GREATER PHILADELPHIA AREA")
		{
			cityName = "PHILADELPHIA";
			stateAbbrev = "PA";
		}
		else if (location == "GREATER PITTSBURGH AREA")
		{
			cityName = "PITTSBURGH";
			stateAbbrev = "PA";
		}
		else if (location == "GREATER SAN DIEGO AREA")
		{
			cityName = "SAN DIEGO";
			stateAbbrev = "CA";
		}
		else if (location == "GREATER SALT LAKE CITY AREA")
		{
			cityName = "SALT LAKE CITY";
			stateAbbrev = "UT";
		}
		else if (location == "GREATER ST. LOUIS AREA")
		{
			cityName = "ST. LOUIS";
			stateAbbrev = "MO";
		}
		else if (location == "GREATER SEATTLE AREA")
		{
			cityName = "SEATTLE";
			stateAbbrev = "WA";
		}
		else if (location == "HARTFORD")
		{
			cityName = "HARTFORD";
			stateAbbrev = "CT";
		}
		else if (location == "HUNT VALLEY")
		{
			cityName = "HUNT VALLEY";
			stateAbbrev = "MD";
		}
		else if (location == "HUNTINGTON BEACH CALIFORNIA")
		{
			cityName = "HUNTINGTON BEACH";
			stateAbbrev = "CA";
		}
		else if (location == "HUNTSVILLE ALABAMA")
		{
			cityName = "HUNTSVILLE";
			stateAbbrev = "AL";
		}
		else if (location == "JACKSON")
		{
			cityName = "JACKSON";
			stateAbbrev = "MS";
		}
		else if (location == "KALAMAZOO")
		{
			cityName = "KALAMAZOO";
			stateAbbrev = "MI";
		}
		else if (location == "KENNER")
		{
			cityName = "KENNER";
			stateAbbrev = "LA";
		}
		else if (location == "LOS ANGELES")
		{
			cityName = "LOS ANGELES";
			stateAbbrev = "CA";
		}
		else if (location == "MCLEAN")
		{
			cityName = "MCLEAN";
			stateAbbrev = "VA";
		}
		else if (location == "MIAMI/FORT LAUDERDALE AREA")
		{
			cityName = "MIAMI";
			stateAbbrev = "FL";
		}
		else if (location == ("MIDTOWN/MANHATTAN  NY") || 
			location == "MIDTOWN MANHATTAN")
		{
			cityName = "NEW YORK";
			stateAbbrev = "NY";
		}
		else if (location == "MOON TOWNSHIP")
		{
			cityName = "PITTSBURGH";
			stateAbbrev = "PA";
		}
		else if (location == "MORRISVILLE")
		{
			cityName = "RALEIGH";
			stateAbbrev = "NC";
		}
		else if (location == "NEW ALBANY")
		{
			cityName = "NEW ALBANY";
			stateAbbrev = "PA";
		}
		else if (location == "NEW ORLEANS")
		{
			cityName = "NEW ORLEANS";
			stateAbbrev = "LA";
		}
		else if (location == "NEW YORK")
		{
			cityName = "NEW YORK";
			stateAbbrev = "NY";
		}
		else if (location == "NEW YORK CITY")
		{
			cityName = "NEW YORK";
			stateAbbrev = "NY";
		}
		else if (location == "NORTH CHARLESTON SOUTH CAROLINA")
		{
			cityName = "NORTH CHARLESTON";
			stateAbbrev = "SC";
		}
		else if (location == "NORFOLK")
		{
			cityName = "NORFOLK";
			stateAbbrev = "VA";
		}
		else if (location == "OAKLAND")
		{
			cityName = "OAKLAND";
			stateAbbrev = "CA";
		}
		else if (location == "OKLAHOMA CITY OKLAHOMA")
		{
			cityName = "OKLAHOMA CITY";
			stateAbbrev = "OK";
		}
		else if (location == "OVERLAND PARK")
		{
			cityName = "OVERLAND PARK";
			stateAbbrev = "KS";
		}
		else if (location == "PHOENIX")
		{
			cityName = "PHOENIX";
			stateAbbrev = "AZ";
		}
		else if (location == "PISCATAWAY")
		{
			cityName = "PISCATAWAY";
			stateAbbrev = "NJ";
		}
		else if (location == "PITTSBURGH")
		{
			cityName = "PITTSBURGH";
			stateAbbrev = "PA";
		}
		else if (companyName == "AETNA" && location == "PLYMOUTH")
		{
			cityName = "PLYMOUTH";
			stateAbbrev = "MN";
		}
		else if (location == "PORTLAND")
		{
			cityName = "PORTLAND";
			stateAbbrev = "OR";
		}
		else if (location == "RICHFIELD")
		{
			cityName = "RICHFIELD";
			stateAbbrev = "OH";
		}
		else if (location == "RICHMOND")
		{
			cityName = "RICHMOND";
			stateAbbrev = "VA";
		}
		else if (location == "RIDLEY PARK PENNSYLVANIA")
		{
			cityName = "RIDLEY PARK";
			stateAbbrev = "PA";
		}
		else if (location == "SALT LAKE CITY")
		{
			cityName = "SALT LAKE CITY";
			stateAbbrev = "UT";
		}
		else if (location == "SAN FRANCISCO" ||
			location == "SAN FRANCISCO BAY AREA" ||
			location == "SAN FRANCISCO (MISSION BAY)")
		{
			cityName = "SAN FRANCISCO";
			stateAbbrev = "CA";
		}
		else if (location == "SAN JOSE")
		{
			cityName = "SAN JOSE";
			stateAbbrev = "CA";
		}
		else if (companyName == "AETNA" && location == "SANDY")
		{
			cityName = "SANDY";
			stateAbbrev = "UT";
		}
		else if (location == "SANTA CLARA")
		{
			cityName = "SANTA CLARA";
			stateAbbrev = "CA";
		}
		else if (location == "SCARSDALE")
		{
			cityName = "SCARSDALE";
			stateAbbrev = "NY";
		}
		else if (location == "SEAL BEACH CALIFORNIA")
		{
			cityName = "SEAL BEACH";
			stateAbbrev = "CA";
		}
		else if (location == "SEATTLE")
		{
			cityName = "SEATTLE";
			stateAbbrev = "WA";
		}
		else if (location == "SITKA")
		{
			cityName = "SITKA";
			stateAbbrev = "AK";
		}
		else if (location == "SOUTHFIELD")
		{
			cityName = "SOUTHFIELD";
			stateAbbrev = "MI";
		}
		else if (location == "ST LOUIS" || 
			location == "ST. LOUIS MISSOURI")
		{
			cityName = "ST LOUIS";
			stateAbbrev = "MO";
		}
		else if (location == "SUGAR LAND")
		{
			cityName = "SUGAR LAND";
			stateAbbrev = "TX";
		}
		else if (companyName == "AETNA" && location == "SUNRISE")
		{
			cityName = "SUNRISE";
			stateAbbrev = "FL";
		}
		else if (location == "TUCSON")
		{
			cityName = "TUCSON";
			stateAbbrev = "AZ";
		}
		else if (location == "WASHINGTON D.C. METRO AREA" || location == "WASHINGTON CD")
		{
			cityName = "WASHINGTON";
			stateAbbrev = "DC";
		}
		
		$out.0.JUSTCITY = cityName;
		$out.0.JUSTSTATEABBREV = stateAbbrev;
		$out.0.JUSTSTATENAME = stateName;
	}
	$out.0.JOBPOSTINGDATE = str2date($in.0.JOBPOSTINGDATE,"MMM d, yyyy");
	if ($in.0.JOBTITLE != null)
	{	
		$out.0.JOBTITLE = replace($in.0.JOBTITLE,"[|]","");
	}
	$out.0.JOBURL = $in.0.JOBURL;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="CSV_READER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="disabled" guiName="DROP TABLE" guiX="63" guiY="245" id="DROP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="disabled" guiName="CREATE TABLE" guiX="280" guiY="245" id="CREATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
	COMPANYTICKER VARCHAR(255),
	LINKEDINCOMPANYNAME VARCHAR(255),
	LINKEDINCOMPANYID VARCHAR(255),
	JOBLOCATION VARCHAR(255),
	JOBPOSTINGDATE DATE,
	JOBTITLE VARCHAR(255),
	JOBURL VARCHAR(255),
	JUSTCITY VARCHAR(255),
	JUSTSTATEABBREV VARCHAR(255),
	JUSTSTATENAME VARCHAR(255)
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="disabled" guiName="POPULATE TABLE" guiX="473" guiY="245" id="POPULATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	COMPANYTICKER,
	LINKEDINCOMPANYNAME,
	LINKEDINCOMPANYID,
	JOBLOCATION,
	JOBPOSTINGDATE,
	JOBTITLE,
	JOBURL,
	JUSTCITY,
	JUSTSTATEABBREV,
	JUSTSTATENAME
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node baseURL="${READFILEPATH}" enabled="disabled" guiName="Clean download" guiX="63" guiY="334" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="disabled" guiName="Clean error" guiX="280" guiY="334" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="disabled" guiName="Clean write" guiX="474" guiY="334" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
</Graph>
