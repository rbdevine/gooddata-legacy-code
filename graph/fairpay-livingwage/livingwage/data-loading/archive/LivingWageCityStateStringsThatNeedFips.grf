<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Mon Sep 19 09:45:33 EDT 2016" description="Load up a list of cities and states and try to match " guiVersion="3.4.4.P" id="1474293575901" licenseType="Commercial" modified="Mon Sep 19 12:53:26 EDT 2016" modifiedBy="hankmobley" name="LivingWageCitiesThatNeedFips" revision="1.15" showComponentDetails="true">
<Global>
<Metadata id="Metadata1">
<Record fieldDelimiter="|" name="CITY_STATE_SPLIT" recordDelimiter="\n" type="delimited">
<Field name="CITY" type="string"/>
<Field name="STATE" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="CityState" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="CITYSTATE" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/livingwage/CityStateStringsToLookup.xlsx"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/citystatestringstolookuperror.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/CityStateStringsToLookup.xlsx"/>
<Property id="GraphParameter3" name="TABLENAME" value="TMP_COUNTYSTATES_TO_LOOKUP"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter25" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/citystatestringstolookup.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="192" guiY="24" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="351" guiY="101" id="CSV_WRITER" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="Read File" guiX="32" guiY="95" id="READ_FILE" type="SPREADSHEET_READER"/>
<Node enabled="enabled" guiName="Reformat" guiX="192" guiY="101" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	string s1 = $in.0.CITYSTATE;
	string s2 = $in.0.CITYSTATE;
	if ( s1 != null && s1.length() >= 4 && s2 != null && s2.length() >= 2) {
		$out.0.CITY = s1.substring(0, s1.length() - 3);
		$out.0.STATE = right(s2,2);
	} else {
		$out.0.CITY = "";
		$out.0.STATE = "";
	}
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="READ_FILE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop Table" guiX="32" guiY="189" id="DROP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Table" guiX="192" guiY="195" id="CREATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
  COUNTY VARCHAR(128),
  STATE VARCHAR(64)
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Table" guiX="351" guiY="195" id="POPULATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
  COUNTY,
  STATE
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}';
]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Trim Data" guiX="498" guiY="195" id="TRIM_DATA" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[update ${TABLENAME} set county = ltrim(rtrim(county));
update ${TABLENAME} set state = ltrim(rtrim(state));
]]></attr>
</Node>
</Phase>
<Phase number="6">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean Download" guiX="44" guiY="282" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean Error" guiX="192" guiY="282" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean Write" guiX="351" guiY="282" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
</Graph>
