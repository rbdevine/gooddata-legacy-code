<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Mon Sep 19 09:45:33 EDT 2016" description="Load up a list of cities and states and try to match " guiVersion="3.4.4.P" id="1474293575901" licenseType="Commercial" modified="Thu Jan 19 15:44:10 EST 2017" modifiedBy="richdevine" name="LivingWageCitiesThatNeedFips" revision="1.97" showComponentDetails="true">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="CityCountyState" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="TICKER" type="string"/>
<Field name="SUBSIDIARY" type="string"/>
<Field name="NAME" type="string"/>
<Field name="CITY" type="string"/>
<Field name="COUNTY" type="string"/>
<Field name="STATE" type="string"/>
<Field name="STATE_COUNTY_FIPS" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="CityCountyStateCount" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="TICKER" type="string"/>
<Field name="SUBSIDIARY" type="string"/>
<Field name="EMPLOYEE_COUNT" type="string"/>
<Field name="ADDRESS" type="string"/>
<Field name="CITY" type="string"/>
<Field name="STATE" type="string"/>
<Field name="COUNTY" type="string"/>
<Field name="LATITUDE" type="string"/>
<Field name="LONGITUDE" type="string"/>
<Field name="GEO_ACCURACY" type="string"/>
<Field name="COUNTRY" type="string"/>
<Field name="STATE_COUNTY_FIPS" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="CountyAvg" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="TICKER" type="string"/>
<Field name="SUBSIDIARY" type="string"/>
<Field name="NAME" type="string"/>
<Field name="AVGEMPLOYEECOUNT" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata3" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," name="MissingFIPS" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="CITY" type="string"/>
<Field name="STATE" type="string"/>
<Field name="COUNTY" type="string"/>
<Field name="COUNTRY" type="string"/>
<Field name="STATE_COUNTY_FIPS" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH_COUNTYCOUNT_FIPSMATCH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/livingwage/CountyCityCountLookup.xlsx"/>
<Property id="GraphParameter1" name="DOWNLOADFILEPATH_FIPSUPDATE" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/livingwage/FIPSUpdate.xlsx"/>
<Property id="GraphParameter2" name="POPULATEERRORFILEPATH_COUNTYCOUNT_FIPSMATCH" value="${DATA_TMP_DIR}/countycitycountlookuperror.txt"/>
<Property id="GraphParameter3" name="POPULATEERRORFILEPATH_FIPSUPDATE" value="${DATA_TMP_DIR}/fipsupdateerror.txt"/>
<Property id="GraphParameter4" name="READFILEPATH_COUNTYCOUNT_FIPSMATCH" value="${DATA_TMP_DIR}/CountyCityCountLookup.xlsx"/>
<Property id="GraphParameter5" name="READFILEPATH_FIPSUPDATE" value="${DATA_TMP_DIR}/FIPSUpdate.xlsx"/>
<Property id="GraphParameter6" name="REPORTFILEPATH_MISSING_FIPS" value="${REPORTS_DIR}/FIPS_Updates.csv"/>
<Property id="GraphParameter7" name="REPORTS_DIR" value="${DATA_DIR}/livingwage-reports"/>
<Property id="GraphParameter8" name="TABLENAME_COUNTY_COUNTS" value="LKP_LIVING_WAGE_EMPLOYEE_COUNT_BY_COUNTY"/>
<Property id="GraphParameter9" name="TABLENAME_COUNTYCOUNT_FIPSMATCH" value="TMP_LIVING_WAGE_COUNTY_COUNT_FIPSMATCH"/>
<Property id="GraphParameter10" name="TABLENAME_FIPSUPDATE" value="TMP_LIVING_WAGE_FIPSUPDATE"/>
<Property fileURL="workspace.prm" id="GraphParameter11"/>
<Property id="GraphParameter26" name="WRITEFILEPATH_COUNTYCOUNT_FIPSMATCH" value="${DATA_TRANSFORM_DIR}/countycountfipsmatch.txt"/>
<Property id="GraphParameter27" name="WRITEFILEPATH_FIPSUPDATE" value="${DATA_TRANSFORM_DIR}/fipsupdate.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH_COUNTYCOUNT_FIPSMATCH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="County Count Fips Match File Download" guiX="151" guiY="7" id="COUNTY_COUNT_FIPS_MATCH_FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create County Count Fips Match Table" guiX="30" guiY="83" id="CREATE_COUNTY_COUNT_FIPS_MATCH_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME_COUNTYCOUNT_FIPSMATCH};
CREATE TABLE ${TABLENAME_COUNTYCOUNT_FIPSMATCH} (
  TICKER VARCHAR(32),
  SUBSIDIARY VARCHAR(255),
  EMPLOYEE_COUNT FLOAT,
  ADDRESS VARCHAR(255),
  CITY VARCHAR(64),
  STATE VARCHAR(2),
  COUNTY VARCHAR(128),
  LATITUDE VARCHAR(64),
  LONGITUDE VARCHAR(64),
  GEO_ACCURACY VARCHAR(128),
  COUNTRY VARCHAR(64),
  STATE_COUNTY_FIPS VARCHAR(5)
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create County Count Table" guiX="462" guiY="83" id="CREATE_COUNTY_COUNT_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME_COUNTY_COUNTS} (
  STATE_COUNTY_FIPS VARCHAR(5),
  TICKER VARCHAR(32),
  SUBSIDIARY VARCHAR(255),
  EMPLOYEE_COUNT INTEGER
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Update Fips Table" guiX="286" guiY="83" id="CREATE_UPDATE_FIPS_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME_FIPSUPDATE};
CREATE TABLE ${TABLENAME_FIPSUPDATE} (
  CITY VARCHAR(64),
  STATE VARCHAR(2),
  COUNTY VARCHAR(128),
  COUNTRY VARCHAR(64),
  STATE_COUNTY_FIPS VARCHAR(5)
);]]></attr>
</Node>
<Node baseURL="${DOWNLOADFILEPATH_FIPSUPDATE}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="Fips Update File Download" guiX="411" guiY="7" id="FIPS_UPDATE_FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${READFILEPATH_COUNTYCOUNT_FIPSMATCH}" guiName="Read County Count Fips Match File" guiX="30" guiY="164" id="READ_COUNTY_COUNT_FIPS_MATCH_FILE" type="SPREADSHEET_READER"/>
<Node enabled="enabled" fileURL="${READFILEPATH_FIPSUPDATE}" guiName="Read Fips Update File" guiX="57" guiY="258" id="READ_FIPS_UPDATE_FILE1" type="SPREADSHEET_READER"/>
<Node enabled="enabled" guiName="Reformat County Count Fips" guiX="272" guiY="170" id="REFORMAT_COUNTY_COUNT_FIPS" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.TICKER = $in.0.TICKER;
	$out.0.SUBSIDIARY = $in.0.SUBSIDIARY;
	$out.0.EMPLOYEE_COUNT = $in.0.EMPLOYEE_COUNT;
	$out.0.ADDRESS = $in.0.ADDRESS;
	$out.0.CITY = $in.0.CITY;
	$out.0.STATE = $in.0.STATE;
	$out.0.COUNTY = $in.0.COUNTY;
	$out.0.LATITUDE = $in.0.LATITUDE;
	$out.0.LONGITUDE = $in.0.LONGITUDE;
	$out.0.GEO_ACCURACY = $in.0.GEO_ACCURACY;
	$out.0.COUNTRY = $in.0.COUNTRY;
	$out.0.STATE_COUNTY_FIPS = $in.0.STATE_COUNTY_FIPS;
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Reformat Fips Update" guiX="272" guiY="270" id="REFORMAT_FIPS_UPDATE" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.CITY = $in.0.CITY;
	$out.0.STATE = $in.0.STATE;
	$out.0.COUNTY = $in.0.COUNTY;
	$out.0.COUNTRY = $in.0.COUNTRY;
	$out.0.STATE_COUNTY_FIPS = $in.0.STATE_COUNTY_FIPS;
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" fileURL="${WRITEFILEPATH_COUNTYCOUNT_FIPSMATCH}" guiName="Write County Count Fips" guiX="479" guiY="158" id="WRITE_COUNTY_COUNT_FIPS" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${WRITEFILEPATH_FIPSUPDATE}" guiName="Write Fips Update" guiX="479" guiY="258" id="WRITE_FIPS_UPDATE" type="DATA_WRITER"/>
<Edge fromNode="READ_COUNTY_COUNT_FIPS_MATCH_FILE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" toNode="REFORMAT_COUNTY_COUNT_FIPS:0"/>
<Edge fromNode="READ_FIPS_UPDATE_FILE1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (output)" toNode="REFORMAT_FIPS_UPDATE:0"/>
<Edge fromNode="REFORMAT_COUNTY_COUNT_FIPS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="WRITE_COUNTY_COUNT_FIPS:0"/>
<Edge fromNode="REFORMAT_FIPS_UPDATE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge9" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" toNode="WRITE_FIPS_UPDATE:0"/>
</Phase>
<Phase number="2">
<Node baseURL="${READFILEPATH_COUNTYCOUNT_FIPSMATCH}" enabled="enabled" guiName="Clean County Count Fips Match Download" guiX="10" guiY="1157" id="CLEAN_COUNTY_COUNT_FIPS_MATCH_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${READFILEPATH_FIPSUPDATE}" enabled="enabled" guiName="Clean FIPS Update Download" guiX="90" guiY="1230" id="CLEAN_FIPS_UPDATE_DOWNLOAD" type="FILE_DELETE"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate County Count Fips Match Table" guiX="123" guiY="364" id="POPULATE_COUNTY_COUNT_FIPS_MATCH_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME_COUNTYCOUNT_FIPSMATCH} (
  TICKER,
  SUBSIDIARY,
  EMPLOYEE_COUNT,
  ADDRESS,
  CITY,
  STATE,
  COUNTY,
  LATITUDE,
  LONGITUDE,
  GEO_ACCURACY,
  COUNTRY,
  STATE_COUNTY_FIPS
)
FROM LOCAL '${WRITEFILEPATH_COUNTYCOUNT_FIPSMATCH}'
EXCEPTIONS '${POPULATEERRORFILEPATH_COUNTYCOUNT_FIPSMATCH}';
]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Fips Update Table" guiX="392" guiY="364" id="POPULATE_FIPS_UPDATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME_FIPSUPDATE} (
  CITY,
  STATE,
  COUNTY,
  COUNTRY,
  STATE_COUNTY_FIPS
)
FROM LOCAL '${WRITEFILEPATH_FIPSUPDATE}'
EXCEPTIONS '${POPULATEERRORFILEPATH_FIPSUPDATE}';
]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node baseURL="${POPULATEERRORFILEPATH_COUNTYCOUNT_FIPSMATCH}" enabled="enabled" guiName="Clean County Count Fips Match Error" guiX="283" guiY="1157" id="CLEAN_COUNTY_COUNT_FIPS_MATCH_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH_COUNTYCOUNT_FIPSMATCH}" enabled="enabled" guiName="Clean County Count Fips Match Write" guiX="529" guiY="1157" id="CLEAN_COUNTY_COUNT_FIPS_MATCH_WRITE" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH_FIPSUPDATE}" enabled="enabled" guiName="Clean FIPS Update Error" guiX="291" guiY="1230" id="CLEAN_FIPS_UPDATE_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH_FIPSUPDATE}" enabled="enabled" guiName="Clean FIPS Update Write" guiX="466" guiY="1230" id="CLEAN_FIPS_UPDATE_WRITE" type="FILE_DELETE"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Trim County Count Fips Match Data" guiX="256" guiY="436" id="TRIM_COUNTY_COUNT_FIPS_MATCH_DATA" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set ticker = ltrim(rtrim(ticker));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set subsidiary = ltrim(rtrim(subsidiary));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = ltrim(rtrim(city));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set state = ltrim(rtrim(state));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = ltrim(rtrim(county));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set latitude = ltrim(rtrim(latitude));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set longitude = ltrim(rtrim(longitude));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set geo_accuracy = ltrim(rtrim(geo_accuracy));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set country = ltrim(rtrim(country));
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set state_county_fips = ltrim(rtrim(state_county_fips));

]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Remove Input Companies from County Count Table" guiX="217" guiY="514" id="REMOVE_INPUT_COMPANIES_FROM_COUNTY_COUNT_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DELETE FROM ${TABLENAME_COUNTY_COUNTS}
WHERE EXISTS (
  SELECT 1
  FROM (SELECT TICKER, SUBSIDIARY FROM ${TABLENAME_COUNTYCOUNT_FIPSMATCH} GROUP BY TICKER, SUBSIDIARY) f
  WHERE f.ticker = ${TABLENAME_COUNTY_COUNTS}.ticker
);]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Adjust Saints" guiX="304" guiY="595" id="ADJUST_SAINTS" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[SET LOCALE to LEN_S1;

update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Albans' where city = 'St Albans';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Albert' where city = 'St Albert';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Ann' where city = 'St Ann';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Anne' where city = 'St Anne';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Ansgar' where city = 'St Ansgar';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Anthony' where city = 'St Anthony';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Augusta' where city = 'St Augusta';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Augustine' where city = 'St Augustine';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Bernard' where city = 'St Bernard';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Catharines' where city = 'St Catharines';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Charles' where city = 'St Charles';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Clair' where city = 'St Clair';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. CLAIR SHORES' where city = 'ST CLAIR SHORES';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Clairsville' where city = 'St Clairsville';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Cloud' where city = 'St Cloud';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. David' where city = 'St David';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Elmo' where city = 'St Elmo';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Francis' where city = 'St Francis';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Genevieve' where city = 'St Genevieve';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. George' where city = 'St George';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Helen' where city = 'St Helen';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Helens' where city = 'St Helens';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Ignace' where city = 'St Ignace';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. James' where city = 'St James';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Jerome' where city = 'St Jerome';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. JOHN' where city = 'ST JOHN';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. John''s' where city = 'St John''s';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Johns' where city = 'St Johns';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Johnsbury' where city = 'St Johnsbury';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Joseph' where city = 'St Joseph';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Louis' where city = 'St Louis';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Louis Park' where city = 'St Louis Park';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Martinville' where city = 'St Martinville';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Marys' where city = 'St Marys';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Michael' where city = 'St Michael';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Paul' where city = 'St Paul';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Pete Beach' where city = 'St Pete Beach';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Peter' where city = 'St Peter';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Peters' where city = 'St Peters';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Petersburg' where city = 'St Petersburg';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Robert' where city = 'St Robert';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Rose' where city = 'St Rose';

update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Albans' where city = 'Saint Albans';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Amant' where city = 'Saint Amant';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Ann' where city = 'Saint Ann';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Anne' where city = 'Saint Anne';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Ansgar' where city = 'Saint Ansgar';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Anthony' where city = 'Saint Anthony';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Augistine' where city = 'Saint Augistine';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Augustine' where city = 'Saint Augustine';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Bernard' where city = 'Saint Bernard';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. CHARLES' where city = 'SAINT CHARLES';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. CLAIR' where city = 'SAINT CLAIR';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Clair Shores' where city = 'Saint Clair Shores';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Clairsville' where city = 'Saint Clairsville';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Cloud' where city = 'Saint Cloud';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Elmo' where city = 'Saint Elmo';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Francis' where city = 'Saint Francis';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Francisville' where city = 'Saint Francisville';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Gabriel' where city = 'Saint Gabriel';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. George' where city = 'Saint George';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Helen' where city = 'Saint Helen';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Helens' where city = 'Saint Helens';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Henry' where city = 'Saint Henry';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. James' where city = 'Saint James';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. JAMES CITY' where city = 'SAINT JAMES CITY';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. John' where city = 'Saint John';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Johns' where city = 'Saint Johns';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Johnsbury' where city = 'Saint Johnsbury';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Johnsville' where city = 'Saint Johnsville';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Joseph' where city = 'Saint Joseph';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Louis' where city = 'Saint Louis';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Louis Park' where city = 'Saint Louis Park';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Lucie West' where city = 'Saint Lucie West';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Marks' where city = 'Saint Marks';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. MARTINVILLE' where city = 'SAINT MARTINVILLE';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. MARY''S' where city = 'SAINT MARY''S';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Marys' where city = 'Saint Marys';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Matthews' where city = 'Saint Matthews';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Michael' where city = 'Saint Michael';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Paris' where city = 'Saint Paris';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. PAUL' where city = 'SAINT PAUL';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Pauls' where city = 'Saint Pauls';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Peter' where city = 'Saint Peter';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Peters' where city = 'Saint Peters';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Petersburg' where city = 'Saint Petersbu';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Petersburg' where city = 'Saint Petersbur';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Petersburg' where city = 'Saint Petersburg';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Robert' where city = 'Saint Robert';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Romuald' where city = 'Saint Romuald';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Rose' where city = 'Saint Rose';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'ST. SIMONS ISLAND' where city = 'SAINT SIMONS ISLAND';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Stephen' where city = 'Saint Stephen';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Stephens' where city = 'Saint Stephens';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set city = 'St. Thomas' where city = 'Saint Thomas';

update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Bernard Parish' where county = 'St Bernard Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Charles County' where county = 'St Charles County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Charles Parish' where county = 'St Charles Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Clair County' where county = 'St Clair County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Croix County' where county = 'St Croix County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Francis County' where county = 'St Francis County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Francois County' where county = 'St Francois County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Helena Parish' where county = 'St Helena Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. James Parish' where county = 'St James Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. John the Baptist Parish' where county = 'St John the Baptist Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Johns County' where county = 'St Johns County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Joseph County' where county = 'St Joseph County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Landry Parish' where county = 'St Landry Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Lawrence County' where county = 'St Lawrence County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Louis County' where county = 'St Louis County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Lucie County' where county = 'St Lucie County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Martin Parish' where county = 'St Martin Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Mary Parish' where county = 'St Mary Parish';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Mary''s County' where county = 'St Mary''s County';
update ${TABLENAME_COUNTYCOUNT_FIPSMATCH} set county = 'St. Tammany Parish' where county = 'St Tammany Parish';
]]></attr>
</Node>
</Phase>
<Phase number="6">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Lookup Fips by County" guiX="287" guiY="674" id="LOOKUP_FIPS_BY_COUNTY" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[SET LOCALE to LEN_S1;

UPDATE ${TABLENAME_COUNTYCOUNT_FIPSMATCH} m
SET STATE_COUNTY_FIPS = f.STATE_COUNTY_FIPS
FROM LKP_CITY_FIPS f
WHERE m.state_county_fips is null and f.county_name = m.county and f.state_abbreviation = m.state;]]></attr>
</Node>
</Phase>
<Phase number="7">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Lookup Fips by City" guiX="296" guiY="748" id="LOOKUP_FIPS_BY_CITY" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[SET LOCALE to LEN_S1;

UPDATE ${TABLENAME_COUNTYCOUNT_FIPSMATCH} m
SET STATE_COUNTY_FIPS = f.STATE_COUNTY_FIPS
FROM LKP_CITY_FIPS f
WHERE m.state_county_fips is null and f.city_name = m.city and f.state_abbreviation = m.state;]]></attr>
</Node>
</Phase>
<Phase number="8">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update Fips with Overrides" guiX="271" guiY="827" id="UPDATE_FIPS_WITH_OVERRIDES" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[SET LOCALE to LEN_S1;

UPDATE ${TABLENAME_COUNTYCOUNT_FIPSMATCH} m
SET STATE_COUNTY_FIPS = f.STATE_COUNTY_FIPS
FROM ${TABLENAME_FIPSUPDATE} f
WHERE f.city = m.city and f.state = m.state and f.county = m.county and f.country = m.country;]]></attr>
</Node>
</Phase>
<Phase number="9">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate County Count Table" guiX="265" guiY="903" id="POPULATE_COUNTY_COUNT_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[SET LOCALE to LEN_S1;

INSERT INTO ${TABLENAME_COUNTY_COUNTS}
SELECT
  state_county_fips,
  ticker,
  subsidiary,
  cast(round(sum(employee_count),0) as int)
FROM ${TABLENAME_COUNTYCOUNT_FIPSMATCH}
WHERE state_county_fips is not null
GROUP BY TICKER, SUBSIDIARY, STATE_COUNTY_FIPS
]]></attr>
</Node>
</Phase>
<Phase number="10">
<Node enabled="enabled" guiName="Reformat Missing FIPS" guiX="298" guiY="981" id="REFORMAT_MISSING_FIPS" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Select Missing FIPS" guiX="112" guiY="981" id="SELECT_MISSING_FIPS" type="DB_INPUT_TABLE">
<attr name="sqlQuery"><![CDATA[SELECT
  $CITY:=CITY,
  $STATE:=STATE,
  $COUNTY:=COUNTY,
  $COUNTRY:=COUNTRY,
  $STATE_COUNTY_FIPS:=''
FROM ${TABLENAME_COUNTYCOUNT_FIPSMATCH}
WHERE state_county_fips is null
GROUP BY city, state, county, country
ORDER BY COUNTRY, STATE, CITY, COUNTY]]></attr>
</Node>
<Node enabled="enabled" fileURL="${REPORTFILEPATH_MISSING_FIPS}" guiName="Write Missing FIPS Report" guiX="482" guiY="981" id="WRITE_MISSING_FIPS_REPORT" outputFieldNames="true" type="DATA_WRITER"/>
<Edge fromNode="REFORMAT_MISSING_FIPS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" toNode="WRITE_MISSING_FIPS_REPORT:0"/>
<Edge fromNode="SELECT_MISSING_FIPS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge6" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" toNode="REFORMAT_MISSING_FIPS:0"/>
</Phase>
<Phase number="11">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop County Count Fips Match Table" guiX="129" guiY="1084" id="DROP_COUNTY_COUNT_FIPS_MATCH_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${TABLENAME_COUNTYCOUNT_FIPSMATCH};]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop Fips Update Table" guiX="373" guiY="1084" id="DROP_FIPS_UPDATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${TABLENAME_FIPSUPDATE};]]></attr>
</Node>
</Phase>
</Graph>
