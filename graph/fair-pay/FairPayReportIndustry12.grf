<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Fri Sep 02 09:23:20 EDT 2016" description="Generates report for industry only." guiVersion="3.4.4.P" id="1472845738958" licenseType="Commercial" modified="Fri Sep 02 18:48:39 EDT 2016" modifiedBy="hankmobley" name="FairPayReportIndustry" revision="1.16" showComponentDetails="true">
<Global>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="Summary_DB" recordDelimiter="\n" type="delimited">
<Field name="Job" type="string"/>
<Field name="C1" type="string"/>
<Field name="C2" type="string"/>
<Field name="C3" type="string"/>
<Field name="C4" type="string"/>
<Field name="C5" type="string"/>
<Field name="C6" type="string"/>
<Field name="C7" type="string"/>
<Field name="C8" type="string"/>
<Field name="C9" type="string"/>
<Field name="C10" type="string"/>
<Field name="C11" type="string"/>
<Field name="C12" type="string"/>
<Field name="C13" type="string"/>
<Field name="C14" type="string"/>
<Field name="C15" type="string"/>
<Field name="C16" type="string"/>
<Field name="C17" type="string"/>
<Field name="C18" type="string"/>
<Field name="C19" type="string"/>
<Field name="C20" type="string"/>
<Field name="C21" type="string"/>
<Field name="C22" type="string"/>
<Field name="C23" type="string"/>
<Field name="C24" type="string"/>
<Field name="C25" type="string"/>
<Field name="C26" type="string"/>
<Field name="C27" type="string"/>
<Field name="C28" type="string"/>
<Field name="C29" type="string"/>
<Field name="C30" type="string"/>
<Field name="C31" type="string"/>
<Field name="C32" type="string"/>
<Field name="C33" type="string"/>
<Field name="C34" type="string"/>
<Field name="C35" type="string"/>
<Field name="C36" type="string"/>
<Field name="C37" type="string"/>
<Field name="C38" type="string"/>
<Field name="C39" type="string"/>
<Field name="C40" type="string"/>
<Field name="C41" type="string"/>
<Field name="C42" type="string"/>
<Field name="C43" type="string"/>
<Field name="C44" type="string"/>
<Field name="C45" type="string"/>
<Field name="C46" type="string"/>
<Field name="C47" type="string"/>
<Field name="C48" type="string"/>
<Field name="C49" type="string"/>
<Field name="C50" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," name="Summary_File" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="Job" type="string"/>
<Field name="C1" type="string"/>
<Field name="C2" type="string"/>
<Field name="C3" type="string"/>
<Field name="C4" type="string"/>
<Field name="C5" type="string"/>
<Field name="C6" type="string"/>
<Field name="C7" type="string"/>
<Field name="C8" type="string"/>
<Field name="C9" type="string"/>
<Field name="C10" type="string"/>
<Field name="C11" type="string"/>
<Field name="C12" type="string"/>
<Field name="C13" type="string"/>
<Field name="C14" type="string"/>
<Field name="C15" type="string"/>
<Field name="C16" type="string"/>
<Field name="C17" type="string"/>
<Field name="C18" type="string"/>
<Field name="C19" type="string"/>
<Field name="C20" type="string"/>
<Field name="C21" type="string"/>
<Field name="C22" type="string"/>
<Field name="C23" type="string"/>
<Field name="C24" type="string"/>
<Field name="C25" type="string"/>
<Field name="C26" type="string"/>
<Field name="C27" type="string"/>
<Field name="C28" type="string"/>
<Field name="C29" type="string"/>
<Field name="C30" type="string"/>
<Field name="C31" type="string"/>
<Field name="C32" type="string"/>
<Field name="C33" type="string"/>
<Field name="C34" type="string"/>
<Field name="C35" type="string"/>
<Field name="C36" type="string"/>
<Field name="C37" type="string"/>
<Field name="C38" type="string"/>
<Field name="C39" type="string"/>
<Field name="C40" type="string"/>
<Field name="C41" type="string"/>
<Field name="C42" type="string"/>
<Field name="C43" type="string"/>
<Field name="C44" type="string"/>
<Field name="C45" type="string"/>
<Field name="C46" type="string"/>
<Field name="C47" type="string"/>
<Field name="C48" type="string"/>
<Field name="C49" type="string"/>
<Field delimiter="," name="C50" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="FAIR_TRADE_REPORT_DIR" value="${DATA_DIR}/fair-trade-reports"/>
<Property id="GraphParameter1" name="INDUSTRY" value="'Food &amp; Staples Retailing'"/>
<Property id="GraphParameter2" name="INPUT_DATA_DIR" value="${DATA_DIR}/input"/>
<Property id="GraphParameter3" name="MIN_CO_PER_JOB" value="5"/>
<Property id="GraphParameter4" name="MIN_JOB_COUNT_PER_CO_SCORE_1" value="10"/>
<Property id="GraphParameter5" name="MIN_JOB_COUNT_PER_CO_SCORE_2" value="100"/>
<Property id="GraphParameter6" name="MIN_JOB_COUNT_PER_CO_SCORE_3" value="1000"/>
<Property id="GraphParameter7" name="MIN_JOBS_PER_CO" value="5"/>
<Property id="GraphParameter8" name="REPORTFILEPATH" value="${FAIR_TRADE_REPORT_DIR}/${REPORTNAME}"/>
<Property id="GraphParameter9" name="REPORTNAME" value="FoodStaplesRetail.csv"/>
<Property fileURL="workspace.prm" id="GraphParameter10"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${REPORTFILEPATH}" enabled="enabled" guiName="File Delete" guiX="315" guiY="4" id="FILE_DELETE" type="FILE_DELETE"/>
</Phase>
<Phase number="1">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Generate Temp Parameter Table" guiX="274" guiY="76" id="GENERATE_TEMP_PARAMETER_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists TMP_PARAM;
create table TMP_PARAM (
  MIN_JOB_COUNT_PER_CO_SCORE_1 INT,
  MIN_JOB_COUNT_PER_CO_SCORE_2 INT,
  MIN_JOB_COUNT_PER_CO_SCORE_3 INT,  
  MIN_JOBS_PER_CO INT,
  MIN_CO_PER_JOB INT
);

insert into TMP_PARAM (
  MIN_JOB_COUNT_PER_CO_SCORE_1,
  MIN_JOB_COUNT_PER_CO_SCORE_2,
  MIN_JOB_COUNT_PER_CO_SCORE_3,
  MIN_JOBS_PER_CO,
  MIN_CO_PER_JOB
) values (
  ${MIN_JOB_COUNT_PER_CO_SCORE_1},
  ${MIN_JOB_COUNT_PER_CO_SCORE_2},
  ${MIN_JOB_COUNT_PER_CO_SCORE_3},
  ${MIN_JOBS_PER_CO},
  ${MIN_CO_PER_JOB}
);

drop table if exists TMP_PARAM_INDUSTRY;
create table TMP_PARAM_INDUSTRY (IND VARCHAR(255));
insert into TMP_PARAM_INDUSTRY (IND) values (${INDUSTRY});
]]></attr>
</Node>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Generate Temp Tables" guiX="301" guiY="151" id="GENERATE_TEMP_TABLES" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists TMP_GD_TOTAL_COMPANIES_OF_INTEREST;
drop table if exists TMP_GD_TOP_JOBS;
drop table if exists TMP_GD_COMPANIES_OF_INTEREST;
drop table if exists TMP_COMPANY_JOB_TOTALS;
drop table if exists TMP_JOB_COMPANY_MATRIX_MASTER;
drop table if exists TMP_JOB_COMPANY_MATRIX_HEADER;
drop table if exists TMP_JOB_COMPANY_MATRIX_MASTER_WITH_HEADER;

/*
  TMP_GD_SALARY_SUMMARY
  
  This a temp table to hold salary info for the specified
  industry. This is used as a base for multiple queries 
  for generating various fair trade reports.
*/

drop table if exists TMP_GD_SALARY_SUMMARY;
create table if not exists TMP_GD_SALARY_SUMMARY (
  JUST_INDY VARCHAR(255) NOT NULL,
  JOB VARCHAR(255) NOT NULL,
  COMPANY VARCHAR(255) NOT NULL,
  TICKER VARCHAR(255) NOT NULL,
  TOTAL INT NOT NULL,
  QUALITY_SCORE FLOAT NOT NULL,
  UNADJUSTED_AVG_BASE_HOURLY FLOAT NULL,
  UNADJUSTED_AVG_TOTAL_HOURLY FLOAT NULL,
  UNADJUSTED_AVG_BASE_HOURLY_COLA FLOAT NULL,
  UNADJUSTED_AVG_TOTAL_HOURLY_COLA FLOAT NULL,
  UNADJUSTED_AVG_BASE FLOAT NULL,
  UNADJUSTED_AVG_TOTAL FLOAT NULL,
  UNADJUSTED_AVG_BASE_COLA FLOAT NULL,
  UNADJUSTED_AVG_TOTAL_COLA FLOAT NULL
);

insert into TMP_GD_SALARY_SUMMARY
select distinct
  just_indy industry, 
  goc job,
  m.co_long_name company,
  s.ticker,
  count(goc) total,
  case
    when count(goc) < max(p.MIN_JOB_COUNT_PER_CO_SCORE_1) then 0.0
    when count(goc) < max(p.MIN_JOB_COUNT_PER_CO_SCORE_2) then 1.0
    when count(goc) < max(p.MIN_JOB_COUNT_PER_CO_SCORE_3) then 2.0
    else 3.0
  end quality_score,
  cast(round(avg(UNADJUSTEDBASEHOURLY),2) as numeric(36,2)) unadjusted_hourly_avg_base,
  cast(round(avg(UNADJUSTEDTOTALHOURLY),2) as numeric(36,2)) unadjusted_hourly_avg_total,
  cast(round(avg(UNADJUSTEDBASEHOURLY_COLA),2) as numeric(36,2)) unadjusted_hourly_avg_base_cola,
  cast(round(avg(UNADJUSTEDTOTALHOURLY_COLA),2) as numeric(36,2)) unadjusted_hourly_avg_total_cola, 
  cast(round(avg(UNADJUSTEDBASESALARY),2) as numeric(36,2)) unadjusted_avg_base,
  cast(round(avg(UNADJUSTEDTOTALSALARY),2) as numeric(36,2)) unadjusted_avg_total,
  cast(round(avg(UNADJUSTEDBASESALARY_COLA),2) as numeric(36,2)) unadjusted_avg_base_cola,
  cast(round(avg(UNADJUSTEDTOTALSALARY_COLA),2) as numeric(36,2)) unadjusted_avg_total_cola  
from LKP_GLASSDOOR_SALARY_DW s
join LKP_JUST_CO_SECTY_MASTER m on s.just_company_id = m.just_co_id
join TMP_PARAM p on true
where
  just_indy in (select IND from TMP_PARAM_INDUSTRY) /*just_indy = 'Retailing'*/
  and stateabbreviation <> 'PR' and goc is not null
group by just_indy, s.TICKER, m.co_long_name, GOC
having count(goc) >= max(p.MIN_JOB_COUNT_PER_CO_SCORE_1);

/*
  Prune companies and jobs that don't meet minimum criteria
  specified via temp parameters.
  No looping or if statements with vertica, so just iterate
  through say, 5 times. Should do the trick.
*/
delete from TMP_GD_SALARY_SUMMARY where job in (select job from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by job having count(company) < max(p.MIN_CO_PER_JOB));
delete from TMP_GD_SALARY_SUMMARY where company in (select company from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by company having count(job) < max(p.MIN_JOBS_PER_CO));
delete from TMP_GD_SALARY_SUMMARY where job in (select job from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by job having count(company) < max(p.MIN_CO_PER_JOB));
delete from TMP_GD_SALARY_SUMMARY where company in (select company from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by company having count(job) < max(p.MIN_JOBS_PER_CO));
delete from TMP_GD_SALARY_SUMMARY where job in (select job from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by job having count(company) < max(p.MIN_CO_PER_JOB));
delete from TMP_GD_SALARY_SUMMARY where company in (select company from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by company having count(job) < max(p.MIN_JOBS_PER_CO));
delete from TMP_GD_SALARY_SUMMARY where job in (select job from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by job having count(company) < max(p.MIN_CO_PER_JOB));
delete from TMP_GD_SALARY_SUMMARY where company in (select company from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by company having count(job) < max(p.MIN_JOBS_PER_CO));
delete from TMP_GD_SALARY_SUMMARY where job in (select job from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by job having count(company) < max(p.MIN_CO_PER_JOB));
delete from TMP_GD_SALARY_SUMMARY where company in (select company from TMP_GD_SALARY_SUMMARY join TMP_PARAM p on true group by company having count(job) < max(p.MIN_JOBS_PER_CO));


/*
  TMP_JOBS_OF_INTEREST
  
  List of all the jobs in the TMP_GD_SALARY_SUMMARY table.
*/
create table if not exists TMP_JOBS_OF_INTEREST (JOB VARCHAR(255) NOT NULL);
insert into TMP_JOBS_OF_INTEREST select job from TMP_GD_SALARY_SUMMARY group by job;

/*
  TMP_GD_COMPANIES_OF_INTEREST
   
  List of all companies that have records in TMP_GD_SALARY_SUMMARY table.
  This is used as a base for the hack for creating a header row. Id is used
  to identify the column. id is ordered 1-n, alphabetical by company name.
*/
drop table if exists TMP_GD_COMPANIES_OF_INTEREST;
create table if not exists TMP_GD_COMPANIES_OF_INTEREST (
  ID INT PRIMARY KEY,
  COMPANY VARCHAR(255) NOT NULL
);

insert into TMP_GD_COMPANIES_OF_INTEREST (id, company)
select rank() over (order by jobCnt desc, company) id, company from (
  select company, count(job) jobCnt
  from TMP_GD_SALARY_SUMMARY
  where quality_score > 0
  group by company
) t;

/*
  TMP_COMPANY_JOB_TOTALS
  
  Job totals per company, includes id and company name. Again, needed
  for simplyfying the header row issue.
*/
create table if not exists TMP_COMPANY_JOB_TOTALS (
  TMP_COMPANY_ID INT NOT NULL,
  COMPANY VARCHAR(255) NOT NULL,
  JOB VARCHAR(255) NOT NULL, 
  RATE FLOAT NULL,
  SCORE INT NULL,
  TOTAL INT NULL
);

insert into TMP_COMPANY_JOB_TOTALS 
select c.id, c.company, s.job, s.unadjusted_avg_base_hourly_cola, r.raterank, s.total 
from TMP_GD_COMPANIES_OF_INTEREST c
join TMP_GD_SALARY_SUMMARY s on s.company = c.company
join (
  select 
    rank() over (partition by job order by unadjusted_avg_base_hourly_cola desc) raterank, 
    company,
    job
  from TMP_GD_SALARY_SUMMARY
) r on s.company = r.company and r.job = s.job;

/*
  TMP_JOB_COMPANY_MATRIX_HEADER
  
  Companikes listed in columns 1-50
  Nulls are put in towards end if less than 50
  If more than 50, should increse the number of columns
*/
create table TMP_JOB_COMPANY_MATRIX_HEADER (
  C1 VARCHAR(255) NULL, C2 VARCHAR(255) NULL, C3 VARCHAR(255) NULL, C4 VARCHAR(255) NULL, C5 VARCHAR(255) NULL, C6 VARCHAR(255) NULL, C7 VARCHAR(255) NULL, C8 VARCHAR(255) NULL, C9 VARCHAR(255) NULL, C10 VARCHAR(255) NULL,
  C11 VARCHAR(255) NULL, C12 VARCHAR(255) NULL, C13 VARCHAR(255) NULL, C14 VARCHAR(255) NULL, C15 VARCHAR(255) NULL, C16 VARCHAR(255) NULL, C17 VARCHAR(255) NULL, C18 VARCHAR(255) NULL, C19 VARCHAR(255) NULL, C20 VARCHAR(255) NULL,
  C21 VARCHAR(255) NULL, C22 VARCHAR(255) NULL, C23 VARCHAR(255) NULL, C24 VARCHAR(255) NULL, C25 VARCHAR(255) NULL, C26 VARCHAR(255) NULL, C27 VARCHAR(255) NULL, C28 VARCHAR(255) NULL, C29 VARCHAR(255) NULL, C30 VARCHAR(255) NULL,
  C31 VARCHAR(255) NULL, C32 VARCHAR(255) NULL, C33 VARCHAR(255) NULL, C34 VARCHAR(255) NULL, C35 VARCHAR(255) NULL, C36 VARCHAR(255) NULL, C37 VARCHAR(255) NULL, C38 VARCHAR(255) NULL, C39 VARCHAR(255) NULL, C40 VARCHAR(255) NULL,
  C41 VARCHAR(255) NULL, C42 VARCHAR(255) NULL, C43 VARCHAR(255) NULL, C44 VARCHAR(255) NULL, C45 VARCHAR(255) NULL, C46 VARCHAR(255) NULL, C47 VARCHAR(255) NULL, C48 VARCHAR(255) NULL, C49 VARCHAR(255) NULL, C50 VARCHAR(255) NULL
);

insert into TMP_JOB_COMPANY_MATRIX_HEADER
    select *
    from (
      select company c1 from TMP_GD_COMPANIES_OF_INTEREST where id = 1 limit 1
    ) c1 
    left join (
      select company c2 from TMP_GD_COMPANIES_OF_INTEREST where id = 2 limit 1
    ) c2 on true 
    left join (
      select company c3 from TMP_GD_COMPANIES_OF_INTEREST where id = 3 limit 1
    ) c3 on true
    left join (
      select company c4 from TMP_GD_COMPANIES_OF_INTEREST where id = 4 limit 1
    ) c4 on true
    left join (
      select company c5 from TMP_GD_COMPANIES_OF_INTEREST where id = 5 limit 1
    ) c5 on true
    left join ( 
      select company c6 from TMP_GD_COMPANIES_OF_INTEREST where id = 6 limit 1
    ) c6 on true 
    left join (
      select company c7 from TMP_GD_COMPANIES_OF_INTEREST where id = 7 limit 1
    ) c7 on true 
    left join (
      select company c8 from TMP_GD_COMPANIES_OF_INTEREST where id = 8 limit 1
    ) c8 on true
    left join (
      select company c9 from TMP_GD_COMPANIES_OF_INTEREST where id = 9 limit 1
    ) c9 on true
    left join (
      select company c10 from TMP_GD_COMPANIES_OF_INTEREST where id = 10 limit 1
    ) c10 on true
    left join ( 
      select company c11 from TMP_GD_COMPANIES_OF_INTEREST where id = 11 limit 1
    ) c11 on true 
    left join (
      select company c12 from TMP_GD_COMPANIES_OF_INTEREST where id = 12 limit 1
    ) c12 on true 
    left join (
      select company c13 from TMP_GD_COMPANIES_OF_INTEREST where id = 13 limit 1
    ) c13 on true
    left join (
      select company c14 from TMP_GD_COMPANIES_OF_INTEREST where id = 14 limit 1
    ) c14 on true
    left join (
      select company c15 from TMP_GD_COMPANIES_OF_INTEREST where id = 15 limit 1
    ) c15 on true
    left join ( 
      select company c16 from TMP_GD_COMPANIES_OF_INTEREST where id = 16 limit 1
    ) c16 on true 
    left join (
      select company c17 from TMP_GD_COMPANIES_OF_INTEREST where id = 17 limit 1
    ) c17 on true 
    left join (
      select company c18 from TMP_GD_COMPANIES_OF_INTEREST where id = 18 limit 1
    ) c18 on true
    left join (
      select company c19 from TMP_GD_COMPANIES_OF_INTEREST where id = 19 limit 1
    ) c19 on true
    left join (
      select company c20 from TMP_GD_COMPANIES_OF_INTEREST where id = 20 limit 1
    ) c20 on true
    left join ( 
      select company c21 from TMP_GD_COMPANIES_OF_INTEREST where id = 21 limit 1
    ) c21 on true 
    left join (
      select company c22 from TMP_GD_COMPANIES_OF_INTEREST where id = 22 limit 1
    ) c22 on true 
    left join (
      select company c23 from TMP_GD_COMPANIES_OF_INTEREST where id = 23 limit 1
    ) c23 on true
    left join (
      select company c24 from TMP_GD_COMPANIES_OF_INTEREST where id = 24 limit 1
    ) c24 on true
    left join (
      select company c25 from TMP_GD_COMPANIES_OF_INTEREST where id = 25 limit 1
    ) c25 on true
    left join ( 
      select company c26 from TMP_GD_COMPANIES_OF_INTEREST where id = 26 limit 1
    ) c26 on true 
    left join (
      select company c27 from TMP_GD_COMPANIES_OF_INTEREST where id = 27 limit 1
    ) c27 on true 
    left join (
      select company c28 from TMP_GD_COMPANIES_OF_INTEREST where id = 28 limit 1
    ) c28 on true
    left join (
      select company c29 from TMP_GD_COMPANIES_OF_INTEREST where id = 29 limit 1
    ) c29 on true
    left join (
      select company c30 from TMP_GD_COMPANIES_OF_INTEREST where id = 30 limit 1
    ) c30 on true
    left join ( 
      select company c31 from TMP_GD_COMPANIES_OF_INTEREST where id = 31 limit 1
    ) c31 on true 
    left join (
      select company c32 from TMP_GD_COMPANIES_OF_INTEREST where id = 32 limit 1
    ) c32 on true 
    left join (
      select company c33 from TMP_GD_COMPANIES_OF_INTEREST where id = 33 limit 1
    ) c33 on true
    left join (
      select company c34 from TMP_GD_COMPANIES_OF_INTEREST where id = 34 limit 1
    ) c34 on true
    left join (
      select company c35 from TMP_GD_COMPANIES_OF_INTEREST where id = 35 limit 1
    ) c35 on true
    left join ( 
      select company c36 from TMP_GD_COMPANIES_OF_INTEREST where id = 36 limit 1
    ) c36 on true 
    left join (
      select company c37 from TMP_GD_COMPANIES_OF_INTEREST where id = 37 limit 1
    ) c37 on true 
    left join (
      select company c38 from TMP_GD_COMPANIES_OF_INTEREST where id = 38 limit 1
    ) c38 on true
    left join (
      select company c39 from TMP_GD_COMPANIES_OF_INTEREST where id = 39 limit 1
    ) c39 on true
    left join (
      select company c40 from TMP_GD_COMPANIES_OF_INTEREST where id = 40 limit 1
    ) c40 on true
    left join ( 
      select company c41 from TMP_GD_COMPANIES_OF_INTEREST where id = 41 limit 1
    ) c41 on true 
    left join (
      select company c42 from TMP_GD_COMPANIES_OF_INTEREST where id = 42 limit 1
    ) c42 on true 
    left join (
      select company c43 from TMP_GD_COMPANIES_OF_INTEREST where id = 43 limit 1
    ) c43 on true
    left join (
      select company c44 from TMP_GD_COMPANIES_OF_INTEREST where id = 44 limit 1
    ) c44 on true
    left join (
      select company c45 from TMP_GD_COMPANIES_OF_INTEREST where id = 45 limit 1
    ) c45 on true
    left join ( 
      select company c46 from TMP_GD_COMPANIES_OF_INTEREST where id = 46 limit 1
    ) c46 on true 
    left join (
      select company c47 from TMP_GD_COMPANIES_OF_INTEREST where id = 47 limit 1
    ) c47 on true 
    left join (
      select company c48 from TMP_GD_COMPANIES_OF_INTEREST where id = 48 limit 1
    ) c48 on true
    left join (
      select company c49 from TMP_GD_COMPANIES_OF_INTEREST where id = 49 limit 1
    ) c49 on true
    left join (
      select company c50 from TMP_GD_COMPANIES_OF_INTEREST where id = 50 limit 1
    ) c50 on true;

/*
  TMP_JOB_COMPANY_MATRIX_MASTER
  
  Jobs listed in rows 2-n
  Companies listed in first row, corresponding to c1-c50
  Note: If less than 50 companies, columns will be null
  If we ever a case where an industry has more that 50 companies with relevant data, 
  we will need to add columns
*/
create table TMP_JOB_COMPANY_MATRIX_MASTER (
  /*HEADER INT NOT NULL,*/
  JOB VARCHAR(255) NOT NULL UNIQUE,
  C1 INT NULL, C2 INT NULL, C3 INT NULL, C4 INT NULL, C5 INT NULL, C6 INT NULL, C7 INT NULL, C8 INT NULL, C9 INT NULL, C10 INT NULL,
  C11 INT NULL, C12 INT NULL, C13 INT NULL, C14 INT NULL, C15 INT NULL, C16 INT NULL, C17 INT NULL, C18 INT NULL, C19 INT NULL, C20 INT NULL,
  C21 INT NULL, C22 INT NULL, C23 INT NULL, C24 INT NULL, C25 INT NULL, C26 INT NULL, C27 INT NULL, C28 INT NULL, C29 INT NULL, C30 INT NULL,
  C31 INT NULL, C32 INT NULL, C33 INT NULL, C34 INT NULL, C35 INT NULL, C36 INT NULL, C37 INT NULL, C38 INT NULL, C39 INT NULL, C40 INT NULL,
  C41 INT NULL, C42 INT NULL, C43 INT NULL, C44 INT NULL, C45 INT NULL, C46 INT NULL, C47 INT NULL, C48 INT NULL, C49 INT NULL, C50 INT NULL
);

insert into TMP_JOB_COMPANY_MATRIX_MASTER
select * from (
  select distinct 
    j.job, 
    max(c1.total) c1, 
    max(c2.total) c2, 
    max(c3.total) c3, 
    max(c4.total) c4, 
    max(c5.total) c5, 
    max(c6.total) c6, 
    max(c7.total) c7, 
    max(c8.total) c8, 
    max(c9.total) c9, 
    max(c10.total) c10,
    max(c11.total) c11, 
    max(c12.total) c12, 
    max(c13.total) c13, 
    max(c14.total) c14, 
    max(c15.total) c15, 
    max(c16.total) c16, 
    max(c17.total) c17, 
    max(c18.total) c18, 
    max(c19.total) c19, 
    max(c20.total) c20,
    max(c21.total) c21, 
    max(c22.total) c22, 
    max(c23.total) c23, 
    max(c24.total) c24, 
    max(c25.total) c25, 
    max(c26.total) c26, 
    max(c27.total) c27, 
    max(c28.total) c28, 
    max(c29.total) c29, 
    max(c30.total) c30,
    max(c31.total) c31, 
    max(c32.total) c32, 
    max(c33.total) c33, 
    max(c34.total) c34, 
    max(c35.total) c35, 
    max(c36.total) c36, 
    max(c37.total) c37, 
    max(c38.total) c38, 
    max(c39.total) c39, 
    max(c40.total) c40,
    max(c41.total) c41, 
    max(c42.total) c42, 
    max(c43.total) c43, 
    max(c44.total) c44, 
    max(c45.total) c45, 
    max(c46.total) c46, 
    max(c47.total) c47, 
    max(c48.total) c48, 
    max(c49.total) c49, 
    max(c50.total) c50
  from TMP_JOBS_OF_INTEREST j
  join TMP_GD_SALARY_SUMMARY s on j.job = s.job
  left join TMP_COMPANY_JOB_TOTALS c1 on c1.tmp_company_id = 1 and c1.company = s.company and c1.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c2 on c2.tmp_company_id = 2 and c2.company = s.company and c2.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c3 on c3.tmp_company_id = 3 and c3.company = s.company and c3.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c4 on c4.tmp_company_id = 4 and c4.company = s.company and c4.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c5 on c5.tmp_company_id = 5 and c5.company = s.company and c5.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c6 on c6.tmp_company_id = 6 and c6.company = s.company and c6.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c7 on c7.tmp_company_id = 7 and c7.company = s.company and c7.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c8 on c8.tmp_company_id = 8 and c8.company = s.company and c8.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c9 on c9.tmp_company_id = 9 and c9.company = s.company and c9.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c10 on c10.tmp_company_id = 10 and c10.company = s.company and c10.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c11 on c11.tmp_company_id = 11 and c11.company = s.company and c11.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c12 on c12.tmp_company_id = 12 and c12.company = s.company and c12.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c13 on c13.tmp_company_id = 13 and c13.company = s.company and c13.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c14 on c14.tmp_company_id = 14 and c14.company = s.company and c14.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c15 on c15.tmp_company_id = 15 and c15.company = s.company and c15.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c16 on c16.tmp_company_id = 16 and c16.company = s.company and c16.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c17 on c17.tmp_company_id = 17 and c17.company = s.company and c17.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c18 on c18.tmp_company_id = 18 and c18.company = s.company and c18.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c19 on c19.tmp_company_id = 19 and c19.company = s.company and c19.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c20 on c20.tmp_company_id = 20 and c20.company = s.company and c20.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c21 on c21.tmp_company_id = 21 and c21.company = s.company and c21.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c22 on c22.tmp_company_id = 22 and c22.company = s.company and c22.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c23 on c23.tmp_company_id = 23 and c23.company = s.company and c23.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c24 on c24.tmp_company_id = 24 and c24.company = s.company and c24.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c25 on c25.tmp_company_id = 25 and c25.company = s.company and c25.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c26 on c26.tmp_company_id = 26 and c26.company = s.company and c26.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c27 on c27.tmp_company_id = 27 and c27.company = s.company and c27.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c28 on c28.tmp_company_id = 28 and c28.company = s.company and c28.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c29 on c29.tmp_company_id = 29 and c29.company = s.company and c29.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c30 on c30.tmp_company_id = 30 and c30.company = s.company and c30.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c31 on c31.tmp_company_id = 31 and c31.company = s.company and c31.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c32 on c32.tmp_company_id = 32 and c32.company = s.company and c32.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c33 on c33.tmp_company_id = 33 and c33.company = s.company and c33.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c34 on c34.tmp_company_id = 34 and c34.company = s.company and c34.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c35 on c35.tmp_company_id = 35 and c35.company = s.company and c35.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c36 on c36.tmp_company_id = 36 and c36.company = s.company and c36.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c37 on c37.tmp_company_id = 37 and c37.company = s.company and c37.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c38 on c38.tmp_company_id = 38 and c38.company = s.company and c38.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c39 on c39.tmp_company_id = 39 and c39.company = s.company and c39.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c40 on c40.tmp_company_id = 40 and c40.company = s.company and c40.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c41 on c41.tmp_company_id = 41 and c41.company = s.company and c41.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c42 on c42.tmp_company_id = 42 and c42.company = s.company and c42.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c43 on c43.tmp_company_id = 43 and c43.company = s.company and c43.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c44 on c44.tmp_company_id = 44 and c44.company = s.company and c44.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c45 on c45.tmp_company_id = 45 and c45.company = s.company and c45.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c46 on c46.tmp_company_id = 46 and c46.company = s.company and c46.job = j.job 
  left join TMP_COMPANY_JOB_TOTALS c47 on c47.tmp_company_id = 47 and c47.company = s.company and c47.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c48 on c48.tmp_company_id = 48 and c48.company = s.company and c48.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c49 on c49.tmp_company_id = 49 and c49.company = s.company and c49.job = j.job
  left join TMP_COMPANY_JOB_TOTALS c50 on c50.tmp_company_id = 50 and c50.company = s.company and c50.job = j.job
  group by j.job
  order by job
) t;

/*
  TMP_JOB_COMPANY_MATRIX_MASTER_WITH_HEADER
  
  Comobines header with data, requires casts, etc.
*/
create table TMP_JOB_COMPANY_MATRIX_MASTER_WITH_HEADER (
  HEADER INT NOT NULL,
  JOB VARCHAR(255) NOT NULL UNIQUE,
  C1 VARCHAR(255) NULL, C2 VARCHAR(255) NULL, C3 VARCHAR(255) NULL, C4 VARCHAR(255) NULL, C5 VARCHAR(255) NULL, C6 VARCHAR(255) NULL, C7 VARCHAR(255) NULL, C8 VARCHAR(255) NULL, C9 VARCHAR(255) NULL, C10 VARCHAR(255) NULL,
  C11 VARCHAR(255) NULL, C12 VARCHAR(255) NULL, C13 VARCHAR(255) NULL, C14 VARCHAR(255) NULL, C15 VARCHAR(255) NULL, C16 VARCHAR(255) NULL, C17 VARCHAR(255) NULL, C18 VARCHAR(255) NULL, C19 VARCHAR(255) NULL, C20 VARCHAR(255) NULL,
  C21 VARCHAR(255) NULL, C22 VARCHAR(255) NULL, C23 VARCHAR(255) NULL, C24 VARCHAR(255) NULL, C25 VARCHAR(255) NULL, C26 VARCHAR(255) NULL, C27 VARCHAR(255) NULL, C28 VARCHAR(255) NULL, C29 VARCHAR(255) NULL, C30 VARCHAR(255) NULL,
  C31 VARCHAR(255) NULL, C32 VARCHAR(255) NULL, C33 VARCHAR(255) NULL, C34 VARCHAR(255) NULL, C35 VARCHAR(255) NULL, C36 VARCHAR(255) NULL, C37 VARCHAR(255) NULL, C38 VARCHAR(255) NULL, C39 VARCHAR(255) NULL, C40 VARCHAR(255) NULL,
  C41 VARCHAR(255) NULL, C42 VARCHAR(255) NULL, C43 VARCHAR(255) NULL, C44 VARCHAR(255) NULL, C45 VARCHAR(255) NULL, C46 VARCHAR(255) NULL, C47 VARCHAR(255) NULL, C48 VARCHAR(255) NULL, C49 VARCHAR(255) NULL, C50 VARCHAR(255) NULL
);

insert into TMP_JOB_COMPANY_MATRIX_MASTER_WITH_HEADER
select
  header, job, isnull(c1,'') c1, isnull(c2,'') c2, isnull(c3,'') c3, isnull(c4,'') c4, isnull(c5,'') c5, isnull(c6,'') c6, isnull(c7,'') c7, isnull(c8,'') c8, isnull(c9,'') c9, isnull(c10,'') c10, isnull(c11,'') c11, isnull(c12,'') c12, isnull(c13,'') c13, isnull(c14,'') c14, isnull(c15,'') c15, isnull(c16,'') c16, isnull(c17,'') c17, isnull(c18,'') c18, isnull(c19,'') c19, isnull(c20,'') c20,
  isnull(c21,'') c21, isnull(c22,'') c22, isnull(c23,'') c23, isnull(c24,'') c24, isnull(c25,'') c25, isnull(c26,'') c26, isnull(c27,'') c27, isnull(c28,'') c28, isnull(c29,'') c29, isnull(c30,'') c30, isnull(c31,'') c31, isnull(c32,'') c32, isnull(c33,'') c33, isnull(c34,'') c34, isnull(c35,'') c35, isnull(c36,'') c36, isnull(c37,'') c37, isnull(c38,'') c38, isnull(c39,'') c39, isnull(c40,'') c40,
  isnull(c41,'') c41, isnull(c42,'') c42, isnull(c43,'') c43, isnull(c44,'') c44, isnull(c45,'') c45, isnull(c46,'') c46, isnull(c47,'') c47, isnull(c48,'') c48, isnull(c49,'') c49, isnull(c50,'') c50
from (
  select * from (
    select *
    from (
      select 1 header, 'job' job
    ) h 
    left join (
      select * from TMP_JOB_COMPANY_MATRIX_HEADER limit 1
    ) d on true 
  ) h
  union all
  select * from (
    select
      0 header, job, 
      cast(c1 as varchar) c1, 
      cast(c2 as varchar) c2, 
      cast(c3 as varchar) c3, 
      cast(c4 as varchar) c4, 
      cast(c5 as varchar) c5, 
      cast(c6 as varchar) c6, 
      cast(c7 as varchar) c7, 
      cast(c8 as varchar) c8, 
      cast(c9 as varchar) c9, 
      cast(c10 as varchar) c10,
      cast(c11 as varchar) c11, 
      cast(c12 as varchar) c12, 
      cast(c13 as varchar) c13, 
      cast(c14 as varchar) c14, 
      cast(c15 as varchar) c15, 
      cast(c16 as varchar) c16, 
      cast(c17 as varchar) c17, 
      cast(c18 as varchar) c18, 
      cast(c19 as varchar) c19, 
      cast(c20 as varchar) c20,
      cast(c21 as varchar) c21, 
      cast(c22 as varchar) c22, 
      cast(c23 as varchar) c23, 
      cast(c24 as varchar) c24, 
      cast(c25 as varchar) c25, 
      cast(c26 as varchar) c26, 
      cast(c27 as varchar) c27, 
      cast(c28 as varchar) c28, 
      cast(c29 as varchar) c29, 
      cast(c30 as varchar) c30,
      cast(c31 as varchar) c31, 
      cast(c32 as varchar) c32, 
      cast(c33 as varchar) c33, 
      cast(c34 as varchar) c34, 
      cast(c35 as varchar) c35, 
      cast(c36 as varchar) c36, 
      cast(c37 as varchar) c37, 
      cast(c38 as varchar) c38, 
      cast(c39 as varchar) c39, 
      cast(c40 as varchar) c40,
      cast(c41 as varchar) c41, 
      cast(c42 as varchar) c42, 
      cast(c43 as varchar) c43, 
      cast(c44 as varchar) c44, 
      cast(c45 as varchar) c45, 
      cast(c46 as varchar) c46, 
      cast(c47 as varchar) c47, 
      cast(c48 as varchar) c48, 
      cast(c49 as varchar) c49, 
      cast(c50 as varchar) c50
    from 
      TMP_JOB_COMPANY_MATRIX_MASTER
  ) d
) a
order by header desc, job;
]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node enabled="disabled" guiName="Pivot" guiX="515" guiY="104" id="PIVOT" type="PIVOT"/>
<Node enabled="enabled" guiName="Reformat" guiX="327" guiY="228" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Select from Table" guiX="94" guiY="228" id="SELECT_FROM_TABLE" type="DB_INPUT_TABLE">
<attr name="sqlQuery"><![CDATA[select 
  $Job:=job, 
  $C1:=c1, 
  $C2:=c2, 
  $C3:=c3,
  $C4:=c4, 
  $C5:=c5, 
  $C6:=c6, 
  $C7:=c7, 
  $C8:=c8,
  $C9:=c9, 
  $C10:=c10, 
  $C11:=c11, 
  $C12:=c12, 
  $C13:=c13,
  $C14:=c14, 
  $C15:=c15, 
  $C16:=c16, 
  $C17:=c17, 
  $C18:=c18,
  $C19:=c19, 
  $C20:=c20, 
  $C21:=c21, 
  $C22:=c22, 
  $C23:=c23,
  $C24:=c24, 
  $C25:=c25, 
  $C26:=c26, 
  $C27:=c27, 
  $C28:=c28,
  $C29:=c29, 
  $C30:=c30, 
  $C31:=c31, 
  $C32:=c32, 
  $C33:=c33,
  $C34:=c34, 
  $C35:=c35, 
  $C36:=c36, 
  $C37:=c37, 
  $C38:=c38,
  $C39:=c39, 
  $C40:=c40, 
  $C41:=c41, 
  $C42:=c42, 
  $C43:=c43,
  $C44:=c44, 
  $C45:=c45, 
  $C46:=c46, 
  $C47:=c47, 
  $C48:=c48,
  $C49:=c49, 
  $C50:=c50 
from 
  TMP_JOB_COMPANY_MATRIX_MASTER_WITH_HEADER 
order by 
  header desc, 
  job;]]></attr>
</Node>
<Node enabled="enabled" fileURL="${REPORTFILEPATH}" guiName="Write Summary Report" guiX="515" guiY="222" id="WRITE_SUMMARY_REPORT" type="DATA_WRITER"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="WRITE_SUMMARY_REPORT:0"/>
<Edge fromNode="SELECT_FROM_TABLE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="REFORMAT:0"/>
</Phase>
<Phase number="4">
<Node enabled="disabled" guiName="Clean Up Temp Tables" guiX="315" guiY="308" id="CLEAN_UP_TEMP_TABLES" type="DB_EXECUTE"/>
</Phase>
</Graph>
