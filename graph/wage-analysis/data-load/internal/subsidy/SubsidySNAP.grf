<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Thu Sep 15 14:53:16 EDT 2016" description="Load up the living wage distributions." guiVersion="3.4.4.P" id="1473965616523" licenseType="Commercial" modified="Mon Jul 17 14:40:52 EDT 2017" modifiedBy="richdevine" name="LivingWageDistByGOC" revision="1.56" showComponentDetails="true">
<Global>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="SNAP_DB" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="SUBSIDY_CODE" type="integer"/>
<Field name="_8" type="number"/>
<Field name="_9" type="number"/>
<Field name="_10" type="number"/>
<Field name="_11" type="number"/>
<Field name="_12" type="number"/>
<Field name="_13" type="number"/>
<Field name="_14" type="number"/>
<Field name="_15" type="number"/>
<Field name="_16" type="number"/>
<Field name="_17" type="number"/>
<Field name="_18" type="number"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="SNAP_SUBSIDY" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="CODE" type="integer"/>
<Field name="_8" type="number"/>
<Field name="_9" type="number"/>
<Field name="_10" type="number"/>
<Field name="_11" type="number"/>
<Field name="_12" type="number"/>
<Field name="_13" type="number"/>
<Field name="_14" type="number"/>
<Field name="_15" type="number"/>
<Field name="_16" type="number"/>
<Field name="_17" type="number"/>
<Field name="_18" type="number"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/livingwage/SNAPSUBSIDY.xlsx"/>
<Property id="GraphParameter37" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/snapsubsidyerror.txt"/>
<Property id="GraphParameter38" name="READFILEPATH" value="${DATA_TMP_DIR}/SNAPSubsidy.xlsx"/>
<Property id="GraphParameter39" name="TABLENAME" value="${TABLE_SNAP}"/>
<Property id="GraphParameter40" name="TEMP_TABLENAME" value="TMP_SUBSIDY_SNAP"/>
<Property fileURL="wage.prm" id="GraphParameter60"/>
<Property fileURL="workspace.prm" id="GraphParameter41"/>
<Property id="GraphParameter59" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/SNAPSubsidy.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="166" guiY="27" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="325" guiY="104" id="CSV_WRITER" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="Read File" guiX="6" guiY="98" id="READ_FILE" type="SPREADSHEET_READER"/>
<Node enabled="enabled" guiName="Reformat" guiX="166" guiY="104" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.SUBSIDY_CODE =  $in.0.CODE;
	$out.0._8 = $in.0._8;
	$out.0._9 = $in.0._9;
	$out.0._10 = $in.0._10;
	$out.0._11 = $in.0._11;
	$out.0._12 = $in.0._12;
	$out.0._13 = $in.0._13;
	$out.0._14 = $in.0._14;
	$out.0._15 = $in.0._15;
	$out.0._16 = $in.0._16;
	$out.0._17 = $in.0._17;
	$out.0._18 = $in.0._18;
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="READ_FILE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean Download" guiX="18" guiY="368" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Temp Table" guiX="86" guiY="198" id="CREATE_TEMP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TEMP_TABLENAME} (
  SUBSIDY_CODE INTEGER NOT NULL,
  _8 FLOAT NOT NULL,
  _9 FLOAT NOT NULL,
  _10 FLOAT NOT NULL,
  _11 FLOAT NOT NULL,
  _12 FLOAT NOT NULL,
  _13 FLOAT NOT NULL,
  _14 FLOAT NOT NULL,
  _15 FLOAT NOT NULL,
  _16 FLOAT NOT NULL,
  _17 FLOAT NOT NULL,
  _18 FLOAT NOT NULL
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop Table" guiX="18" guiY="285" id="DROP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Table" guiX="166" guiY="285" id="CREATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
  SUBSIDY_CODE INTEGER NOT NULL,
  MINIMUM_WAGE FLOAT NOT NULL,
  MAXIMUM_WAGE FLOAT NOT NULL,
  SUBSIDY_ANNUAL FLOAT NOT NULL
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Temp Table" guiX="243" guiY="198" id="POPULATE_TEMP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TEMP_TABLENAME} (
  SUBSIDY_CODE,
  _8,
  _9,
  _10,
  _11,
  _12,
  _13,
  _14,
  _15,
  _16,
  _17,
  _18
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}';
]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean Error" guiX="166" guiY="368" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean Write" guiX="312" guiY="368" id="CLEAN_WRITE" type="FILE_DELETE"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Table" guiX="312" guiY="285" id="POPULATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[INSERT INTO ${TABLENAME}
SELECT SUBSIDY_CODE, 0.0, 8.0, _8 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 8.01, 9.0, _9 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 9.01, 10.0, _10 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 10.01, 11.0, _11 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 11.01, 12.0, _12 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 12.01, 13.0, _13 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 13.01, 14.0, _14 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 14.01, 15.0, _15 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 15.01, 16.0, _16 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 16.01, 17.0, _17 FROM ${TEMP_TABLENAME}
UNION ALL
SELECT SUBSIDY_CODE, 17.01, 18.0, _18 FROM ${TEMP_TABLENAME}
]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Clean Data" guiX="452" guiY="285" id="CLEAN_DATA" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[UPDATE ${TABLENAME} SET MINIMUM_WAGE = ROUND(MINIMUM_WAGE,2);
UPDATE ${TABLENAME} SET MAXIMUM_WAGE = ROUND(MAXIMUM_WAGE,2);
UPDATE ${TABLENAME} SET SUBSIDY_ANNUAL = ROUND(SUBSIDY_ANNUAL,2);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop Temp Table" guiX="452" guiY="368" id="DROP_TEMP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TEMP_TABLENAME};]]></attr>
</Node>
</Phase>
</Graph>
