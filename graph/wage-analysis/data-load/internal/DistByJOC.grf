<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Thu Sep 15 14:53:16 EDT 2016" description="Load up the living wage distributions." guiVersion="3.4.4.P" id="1473965616523" licenseType="Commercial" modified="Fri Jul 07 15:15:14 EDT 2017" modifiedBy="richdevine" name="LivingWageDistByGOC" revision="1.38" showComponentDetails="true">
<Global>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="DIST_BY_GOC" recordDelimiter="\n" type="delimited">
<Field name="TICKER" type="string"/>
<Field name="SUBSIDIARY" type="string"/>
<Field name="GOC" type="string"/>
<Field name="DISTRIBUTION" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="JOC_DIST_DB" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="TICKER" type="string"/>
<Field name="SUBSIDIARY" type="string"/>
<Field name="JOC" type="string"/>
<Field name="DISTRIBUTION" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/wageanalysis/DistributionsByGOC.xlsx"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/distributionsbygocerror.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/DistributionsByGOC.xlsx"/>
<Property id="GraphParameter3" name="TABLENAME" value="${TABLE_JOC_DISTRIBUTION}"/>
<Property id="GraphParameter4" name="TMPTABLENAME" value="TMP_WAGE_${TABLE_JOC_DISTRIBUTION}"/>
<Property fileURL="wage.prm" id="GraphParameter47"/>
<Property fileURL="wage-staging.prm" id="GraphParameter5"/>
<Property fileURL="workspace.prm" id="GraphParameter28"/>
<Property id="GraphParameter46" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/distributionsbygoc.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Table" guiX="318" guiY="27" id="CREATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};
CREATE TABLE IF NOT EXISTS ${TABLENAME} (
  TICKER VARCHAR(32),
  SUBSIDIARY VARCHAR(255),
  JOC VARCHAR(255),
  DISTRIBUTION FLOAT
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Temp Table" guiX="459" guiY="27" id="CREATE_TEMP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TMPTABLENAME};
CREATE TABLE IF NOT EXISTS ${TMPTABLENAME} (
  TICKER VARCHAR(32),
  SUBSIDIARY VARCHAR(255),
  JOC VARCHAR(255),
  DISTRIBUTION FLOAT
);]]></attr>
</Node>
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="166" guiY="27" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="325" guiY="104" id="CSV_WRITER" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="Read File" guiX="6" guiY="98" id="READ_FILE" type="SPREADSHEET_READER"/>
<Node enabled="enabled" guiName="Reformat" guiX="166" guiY="104" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.TICKER = $in.0.TICKER;
	$out.0.SUBSIDIARY = $in.0.SUBSIDIARY;
	$out.0.JOC = $in.0.GOC;
	$out.0.DISTRIBUTION = $in.0.DISTRIBUTION;
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="READ_FILE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean Download" guiX="14" guiY="188" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Temp Table" guiX="321" guiY="195" id="POPULATE_TEMP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	TICKER,
    SUBSIDIARY,
    JOC,
    DISTRIBUTION
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}';
]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Cleanup Temp Data" guiX="325" guiY="268" id="CLEANUP_TEMP_DATA" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[delete from ${TABLENAME} where ticker is null;
update ${TABLENAME} set TICKER = ltrim(rtrim(TICKER));
update ${TABLENAME} set SUBSIDIARY = ltrim(rtrim(SUBSIDIARY));
update ${TABLENAME} set JOC = ltrim(rtrim(JOC));
]]></attr>
</Node>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean Error" guiX="15" guiY="268" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean Write" guiX="166" guiY="268" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Table" guiX="330" guiY="343" id="POPULATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${TABLENAME}
select t.* 
from ${TMPTABLENAME} t
join (
  select ticker, company_name, alt_company_name, industry 
  from ${TABLE_COMPANY} c 
  left join (
    select ticker_parent 
    from ${TABLE_SUBSIDIARY}) s on s.ticker_parent = c.ticker 
  where s.ticker_parent is null 
  union all 
  select 
    case
      when s.ticker_subsidiary is null then s.ticker_parent
      else ticker_subsidiary
    end ticker, 
    s.subsidiary_name company_name, 
    c.alt_company_name, 
    c.industry 
  from ${TABLE_SUBSIDIARY} s 
  join ${TABLE_COMPANY} c on c.ticker = s.ticker_parent
) s on s.ticker = t.ticker and t.subsidiary in (s.company_name, s.alt_company_name);]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop Temp Table" guiX="330" guiY="419" id="DROP_TEMP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table ${TMPTABLENAME};]]></attr>
</Node>
</Phase>
</Graph>
