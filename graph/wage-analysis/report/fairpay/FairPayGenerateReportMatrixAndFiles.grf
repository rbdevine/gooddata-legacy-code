<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Sat Oct 22 10:25:59 PDT 2016" description="Sets parameters for fair pay and then runs generate lookup tables." guiVersion="3.4.4.P" id="1477175011045" licenseType="Commercial" modified="Tue Jul 11 22:31:25 EDT 2017" modifiedBy="hankmobley" name="FairPayGenerateJobData" revision="1.172" showComponentDetails="true">
<Global>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="Columns" recordDelimiter="\n" type="delimited">
<Field name="column_number" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="SQLUpdate" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="sql" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="COLUMN_NUMBERS_TABLENAME" value="TMP_REPORT_COLUMN_NUMBERS"/>
<Property id="GraphParameter1" name="COMPANY_IDS_REMAPPED_TABLENAME" value="TMP_COMPANY_IDS_REMAPPED"/>
<Property fileURL="wage.prm" id="GraphParameter2"/>
<Property fileURL="wage-fairpay-parameters.prm" id="GraphParameter59"/>
<Property fileURL="workspace.prm" id="GraphParameter65"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Table: Column Number" guiX="602" guiY="8" id="TABLE_COLUMN_NUMBER" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${TABLE_COLUMN_NUMBER};
create table ${TABLE_COLUMN_NUMBER} (
  COLUMN_NUMBER VARCHAR(4) UNIQUE NOT NULL
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Table: Company Id Remapped" guiX="32" guiY="8" id="TABLE_COMPANY_ID_REMAPPED" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${TABLE_COMPANY_ID_REMAPPED};
create table if not exists ${TABLE_COMPANY_ID_REMAPPED} (
  TICKER VARCHAR(16) NOT NULL,
  TICKER_2 VARCHAR(16) NOT NULL,
  COMPANY_COLUMN_NO_ADJ INT NOT NULL
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Table: Report Matrix" guiX="449" guiY="8" id="TABLE_REPORT_MATRIX" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${REPORT_MATRIX_TABLENAME};
create table if not exists ${REPORT_MATRIX_TABLENAME} (
    INDUSTRY VARCHAR(255) NOT NULL, ROW_TYPE VARCHAR(32) NOT NULL, TICKER VARCHAR(16) DEFAULT '',
    DESCRIPTION VARCHAR(255) DEFAULT '', COMPANY_VALUE VARCHAR(255) DEFAULT '', COMPANY_VALUE_2 VARCHAR(255) DEFAULT '', 
    INDUSTRY_VALUE VARCHAR(255) DEFAULT '', INDUSTRY_VALUE_2 VARCHAR(255) DEFAULT '',
    C1 VARCHAR(255) DEFAULT '', C2 VARCHAR(255) DEFAULT '', C3 VARCHAR(255) DEFAULT '', C4 VARCHAR(255) DEFAULT '', C5 VARCHAR(255) DEFAULT '', 
    C6 VARCHAR(255) DEFAULT '', C7 VARCHAR(255) DEFAULT '', C8 VARCHAR(255) DEFAULT '', C9 VARCHAR(255) DEFAULT '', C10 VARCHAR(255) DEFAULT '',
    C11 VARCHAR(255) DEFAULT '', C12 VARCHAR(255) DEFAULT '', C13 VARCHAR(255) DEFAULT '', C14 VARCHAR(255) DEFAULT '', C15 VARCHAR(255) DEFAULT '', 
    C16 VARCHAR(255) DEFAULT '', C17 VARCHAR(255) DEFAULT '', C18 VARCHAR(255) DEFAULT '', C19 VARCHAR(255) DEFAULT '', C20 VARCHAR(255) DEFAULT '',
    C21 VARCHAR(255) DEFAULT '', C22 VARCHAR(255) DEFAULT '', C23 VARCHAR(255) DEFAULT '', C24 VARCHAR(255) DEFAULT '', C25 VARCHAR(255) DEFAULT '', 
    C26 VARCHAR(255) DEFAULT '', C27 VARCHAR(255) DEFAULT '', C28 VARCHAR(255) DEFAULT '', C29 VARCHAR(255) DEFAULT '', C30 VARCHAR(255) DEFAULT '',
    C31 VARCHAR(255) DEFAULT '', C32 VARCHAR(255) DEFAULT '', C33 VARCHAR(255) DEFAULT '', C34 VARCHAR(255) DEFAULT '', C35 VARCHAR(255) DEFAULT '', 
    C36 VARCHAR(255) DEFAULT '', C37 VARCHAR(255) DEFAULT '', C38 VARCHAR(255) DEFAULT '', C39 VARCHAR(255) DEFAULT '', C40 VARCHAR(255) DEFAULT '',
    C41 VARCHAR(255) DEFAULT '', C42 VARCHAR(255) DEFAULT '', C43 VARCHAR(255) DEFAULT '', C44 VARCHAR(255) DEFAULT '', C45 VARCHAR(255) DEFAULT '', 
    C46 VARCHAR(255) DEFAULT '', C47 VARCHAR(255) DEFAULT '', C48 VARCHAR(255) DEFAULT '', C49 VARCHAR(255) DEFAULT '', C50 VARCHAR(255) DEFAULT '',
    C51 VARCHAR(255) DEFAULT '', C52 VARCHAR(255) DEFAULT '', C53 VARCHAR(255) DEFAULT '', C54 VARCHAR(255) DEFAULT '', C55 VARCHAR(255) DEFAULT '',
    C56 VARCHAR(255) DEFAULT '', C57 VARCHAR(255) DEFAULT '', C58 VARCHAR(255) DEFAULT '', C59 VARCHAR(255) DEFAULT '', C60 VARCHAR(255) DEFAULT '',
    C61 VARCHAR(255) DEFAULT '', C62 VARCHAR(255) DEFAULT '', C63 VARCHAR(255) DEFAULT '', C64 VARCHAR(255) DEFAULT '', C65 VARCHAR(255) DEFAULT '',
    C66 VARCHAR(255) DEFAULT '', C67 VARCHAR(255) DEFAULT '', C68 VARCHAR(255) DEFAULT '', C69 VARCHAR(255) DEFAULT '', C70 VARCHAR(255) DEFAULT '',
    RANK_VALUE VARCHAR(8) DEFAULT '', INDUSTRY_JOB_TOTAL VARCHAR(8) DEFAULT ''
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Table: Report Matrix Row Type" guiX="238" guiY="8" id="TABLE_REPORT_MATRIX_ROW_TYPE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${REPORT_MATRIX_ROW_TYPE_TABLENAME};
create table if not exists ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (
  ROW_TYPE VARCHAR(32) NOT NULL UNIQUE,
  ROW_SECTION INT NOT NULL,  /*0 industry header, 1 companies 2 industry footer*/
  DISPLAY_ORDER INT NOT NULL
);]]></attr>
</Node>
</Phase>
<Phase number="1">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Column Number" guiX="511" guiY="95" id="POPULATE_COLUMN_NUMBER" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${TABLE_COLUMN_NUMBER} values('1');
insert into ${TABLE_COLUMN_NUMBER} values('2');
insert into ${TABLE_COLUMN_NUMBER} values('3');
insert into ${TABLE_COLUMN_NUMBER} values('4');
insert into ${TABLE_COLUMN_NUMBER} values('5');
insert into ${TABLE_COLUMN_NUMBER} values('6');
insert into ${TABLE_COLUMN_NUMBER} values('7');
insert into ${TABLE_COLUMN_NUMBER} values('8');
insert into ${TABLE_COLUMN_NUMBER} values('9');
insert into ${TABLE_COLUMN_NUMBER} values('10');
insert into ${TABLE_COLUMN_NUMBER} values('11');
insert into ${TABLE_COLUMN_NUMBER} values('12');
insert into ${TABLE_COLUMN_NUMBER} values('13');
insert into ${TABLE_COLUMN_NUMBER} values('14');
insert into ${TABLE_COLUMN_NUMBER} values('15');
insert into ${TABLE_COLUMN_NUMBER} values('16');
insert into ${TABLE_COLUMN_NUMBER} values('17');
insert into ${TABLE_COLUMN_NUMBER} values('18');
insert into ${TABLE_COLUMN_NUMBER} values('19');
insert into ${TABLE_COLUMN_NUMBER} values('20');
insert into ${TABLE_COLUMN_NUMBER} values('21');
insert into ${TABLE_COLUMN_NUMBER} values('22');
insert into ${TABLE_COLUMN_NUMBER} values('23');
insert into ${TABLE_COLUMN_NUMBER} values('24');
insert into ${TABLE_COLUMN_NUMBER} values('25');
insert into ${TABLE_COLUMN_NUMBER} values('26');
insert into ${TABLE_COLUMN_NUMBER} values('27');
insert into ${TABLE_COLUMN_NUMBER} values('28');
insert into ${TABLE_COLUMN_NUMBER} values('29');
insert into ${TABLE_COLUMN_NUMBER} values('30');
insert into ${TABLE_COLUMN_NUMBER} values('31');
insert into ${TABLE_COLUMN_NUMBER} values('32');
insert into ${TABLE_COLUMN_NUMBER} values('33');
insert into ${TABLE_COLUMN_NUMBER} values('34');
insert into ${TABLE_COLUMN_NUMBER} values('35');
insert into ${TABLE_COLUMN_NUMBER} values('36');
insert into ${TABLE_COLUMN_NUMBER} values('37');
insert into ${TABLE_COLUMN_NUMBER} values('38');
insert into ${TABLE_COLUMN_NUMBER} values('39');
insert into ${TABLE_COLUMN_NUMBER} values('40');
insert into ${TABLE_COLUMN_NUMBER} values('41');
insert into ${TABLE_COLUMN_NUMBER} values('42');
insert into ${TABLE_COLUMN_NUMBER} values('43');
insert into ${TABLE_COLUMN_NUMBER} values('44');
insert into ${TABLE_COLUMN_NUMBER} values('45');
insert into ${TABLE_COLUMN_NUMBER} values('46');
insert into ${TABLE_COLUMN_NUMBER} values('47');
insert into ${TABLE_COLUMN_NUMBER} values('48');
insert into ${TABLE_COLUMN_NUMBER} values('49');
insert into ${TABLE_COLUMN_NUMBER} values('50');
insert into ${TABLE_COLUMN_NUMBER} values('51');
insert into ${TABLE_COLUMN_NUMBER} values('52');
insert into ${TABLE_COLUMN_NUMBER} values('53');
insert into ${TABLE_COLUMN_NUMBER} values('54');
insert into ${TABLE_COLUMN_NUMBER} values('55');
insert into ${TABLE_COLUMN_NUMBER} values('56');
insert into ${TABLE_COLUMN_NUMBER} values('57');
insert into ${TABLE_COLUMN_NUMBER} values('58');
insert into ${TABLE_COLUMN_NUMBER} values('59');
insert into ${TABLE_COLUMN_NUMBER} values('60');
insert into ${TABLE_COLUMN_NUMBER} values('61');
insert into ${TABLE_COLUMN_NUMBER} values('62');
insert into ${TABLE_COLUMN_NUMBER} values('63');
insert into ${TABLE_COLUMN_NUMBER} values('64');
insert into ${TABLE_COLUMN_NUMBER} values('65');
insert into ${TABLE_COLUMN_NUMBER} values('66');
insert into ${TABLE_COLUMN_NUMBER} values('67');
insert into ${TABLE_COLUMN_NUMBER} values('68');
insert into ${TABLE_COLUMN_NUMBER} values('69');
insert into ${TABLE_COLUMN_NUMBER} values('70');]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Company Id Remapped" guiX="65" guiY="95" id="POPULATE_COMPANY_ID_REMAPPED" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${TABLE_COMPANY_ID_REMAPPED}
select
  c.ticker,
  c2.ticker other_ticker,
  case 
    when c2.company_column_no > c.company_column_no then c2.company_column_no - 1
    else c2.company_column_no
  end company_column_no_adj
from ${TABLE_COMPANY_COLUMN} c
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} cs on cs.ticker = c.ticker
join ${TABLE_COMPANY_COLUMN} c2 on c2.ticker <> c.ticker
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} cs2 on cs2.industry = cs.industry and cs2.ticker = c2.ticker;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Report Matrix Row Type" guiX="286" guiY="95" id="POPULATE_REPORT_MATRIX_ROW_TYPE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('IND_HEADER_BLANK_TOP', 0, 0);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('IND_HEADER_NAME', 0, 1);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('IND_HEADER_BLANK_BOTTOM_1', 0, 2);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('IND_HEADER_BLANK_BOTTOM_2', 0, 3);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('CO_HEADER_BLANK_TOP', 1, 0);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('CO_HEADER_NAME', 1, 1);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('CO_HEADER_COLUMN_HEADERS', 1, 2);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('CO_DATA', 1, 3);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('CO_TOTAL', 1, 4);
insert into ${REPORT_MATRIX_ROW_TYPE_TABLENAME} (ROW_TYPE, ROW_SECTION, DISPLAY_ORDER)
values ('IND_FOOTER_BLANK_BOTTOM', 2, 0);]]></attr>
</Node>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Co Data" guiX="123" guiY="346" id="ADD_CO_DATA" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type, ticker, description,
  company_value, 
  industry_value, 
  company_value_2, 
  industry_value_2, 
  rank_value, 
  industry_job_total
)
select
  j.industry, 'CO_DATA', c.ticker, j.joc, 
  cast(cast(round(cjd.wage_hourly_cola,2) as numeric(36,2)) as varchar(8)),
  cast(cast(round(a.avg_wage_hourly_cola,2) as numeric(36,2)) as varchar(8)),
  cast(cast(round(cjd.wage_hourly_raw,2) as numeric(36,2)) as varchar(8)),
  cast(cast(round(ar.avg_wage_hourly_raw,2) as numeric(36,2)) as varchar(8)),
  cast(cjd.score_cola as varchar(8)),
  cast(j.company_count as varchar(8))
from ${TABLE_JOC_COMPANY_COUNT} j
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c on c.industry = j.industry
join ${TABLE_COMPANY_COLUMN} c2 on c2.ticker = c.ticker 
join (
  select 
    c.industry, 
    jd.joc, 
    avg(s.wage_hourly_cola) avg_wage_hourly_cola 
  from ${TABLE_COMPANY_JOB_DATA} jd
  join ${TABLE_WAGE_SUMMARY} s on s.ticker = jd.ticker and s.joc = jd.joc
  join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c on c.ticker = jd.ticker
  group by c.industry, jd.joc
) a on a.industry = j.industry and a.joc = j.joc
join (
  select 
    c.industry, 
    jd.joc, 
    avg(s.wage_hourly_raw) avg_wage_hourly_raw 
  from ${TABLE_COMPANY_JOB_DATA} jd
  join ${TABLE_WAGE_SUMMARY} s on s.ticker = jd.ticker and s.joc = jd.joc
  join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c on c.ticker = jd.ticker
  group by c.industry, jd.joc
) ar on ar.industry = j.industry and ar.joc = j.joc
left join (
  select cjd.ticker, cjd.joc, s.wage_hourly_cola, s.wage_hourly_raw, cjd.score_cola
  from ${TABLE_COMPANY_JOB_DATA} cjd
  join ${TABLE_WAGE_SUMMARY} s on s.ticker = cjd.ticker and s.joc = cjd.joc
) cjd on cjd.joc = j.joc and cjd.ticker = c.ticker;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Co Header Columns" guiX="440" guiY="267" id="ADD_CO_HEADER_COLUMNS" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type, ticker, description,
  company_value, industry_value, company_value_2, industry_value_2, rank_value, industry_job_total
)
select
    c2.industry, 'CO_HEADER_COLUMN_HEADERS', c.ticker, 'JOB', 
    'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG INDUSTRY', 'UNADJUSTED HOURLY AVG', 'UNADJUSTED HOURLY AVG INDUSTRY', 'SCORE', 'MAX'
from ${TABLE_COMPANY_COLUMN} c
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c2 on c2.ticker = c.ticker;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Co Header Name" guiX="268" guiY="267" id="ADD_CO_HEADER_NAME" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type, ticker, description, company_value,
  c1, c2, c3, c4, c5, c6, c7, c8, c9, c10,
  c11, c12, c13, c14, c15, c16, c17, c18, c19, c20,
  c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,
  c31, c32, c33, c34, c35, c36, c37, c38, c39, c40,
  c41, c42, c43, c44, c45, c46, c47, c48, c49, c50,
  c51, c52, c53, c54, c55, c56, c57, c58, c59, c60,
  c61, c62, c63, c64, c65, c66, c67, c68, c69, c70
)
select c2.industry, 'CO_HEADER_NAME', c.ticker, c.ticker, c2.company_name,
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG',
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG',
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG',
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG',
  'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG', 'REAL WAGE HOURLY AVG'
from ${TABLE_COMPANY_COLUMN} c
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c2 on c2.ticker = c.ticker;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Co Header Top" guiX="106" guiY="267" id="ADD_CO_HEADER_TOP" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type, ticker
)
select
    c2.industry, 'CO_HEADER_BLANK_TOP', c.ticker
from ${TABLE_COMPANY_COLUMN} c
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c2 on c2.ticker = c.ticker;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Co Total" guiX="277" guiY="346" id="ADD_CO_TOTAL" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type, ticker, description,
  company_value, industry_value, rank_value, industry_job_total
)
select
  c2.industry, 'CO_TOTAL', c2.ticker, 'SCORE', 
  cast(cast(round((cst.score_cola_tot/ist.ind_company_count)*100,1) as numeric(36,1)) as varchar(8)),
  concat(concat(cast(cst.score_cola_tot as varchar(8)), '/'),cast(ist.ind_company_count as varchar(8))),
  cast(cst.score_cola_tot as varchar(8)),
  cast(ist.ind_company_count as varchar(8))
from ${TABLE_COMPANY_COLUMN} c
join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c2 on c2.ticker = c.ticker
join (select ticker, sum(score_cola) score_cola_tot from ${TABLE_COMPANY_JOB_DATA} t group by ticker) cst on cst.ticker = c.ticker
join (
  select j.industry, cjd.ticker, sum(j.company_count) ind_company_count 
  from ${TABLE_JOC_COMPANY_COUNT} j
  join ${TABLE_COMPANY_JOB_DATA} cjd on j.joc = cjd.joc
  join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c2 on c2.ticker = cjd.ticker and c2.industry = j.industry
  group by j.industry, cjd.ticker
  order by j.industry, cjd.ticker
) ist on ist.ticker = c.ticker;
]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Ind Footer Bottom" guiX="426" guiY="346" id="ADD_IND_FOOTER_BOTTOM" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type
)
select industry, 'IND_FOOTER_BLANK_BOTTOM'
from ${TABLE_JOC_COMPANY_COUNT} t
group by industry;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Ind Header Bottom 1" guiX="351" guiY="185" id="ADD_IND_HEADER_BOTTOM_1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type
)
select industry, 'IND_HEADER_BLANK_BOTTOM_1'
from ${TABLE_JOC_COMPANY_COUNT} t 
group by industry;
]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Ind Header Bottom 2" guiX="535" guiY="185" id="ADD_IND_HEADER_BOTTOM_2" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type
)
select industry, 'IND_HEADER_BLANK_BOTTOM_2'
from ${TABLE_JOC_COMPANY_COUNT} t 
group by industry;
]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Ind Header Name" guiX="183" guiY="185" id="ADD_IND_HEADER_NAME" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type, description
)
select industry, 'IND_HEADER_NAME', industry
from ${TABLE_JOC_COMPANY_COUNT} t
group by industry;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Ind Header Top" guiX="28" guiY="185" id="ADD_IND_HEADER_TOP" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[insert into ${REPORT_MATRIX_TABLENAME}(
  industry, row_type
)
select industry, 'IND_HEADER_BLANK_TOP'
from ${TABLE_JOC_COMPANY_COUNT} t 
group by industry;]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node enabled="enabled" guiName="Create Update Column Header SQL" guiX="190" guiY="435" id="CREATE_UPDATE_COLUMN_HEADER_SQL" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	string sql = "";
	sql = sql + "update ${REPORT_MATRIX_TABLENAME} mtx ";
	sql = sql + "set c" + $in.0.column_number + " = c2.company_name ";
	sql = sql + "from ${TABLE_COMPANY_ID_REMAPPED} r ";
	sql = sql + "join ${TABLE_COMPANY_SUBSIDIARY_TICKER} c2 on c2.ticker = r.ticker_2 ";
	sql = sql + "where r.ticker = mtx.ticker and ";
	sql = sql + "  mtx.row_type = 'CO_HEADER_COLUMN_HEADERS' and ";
	sql = sql + "  r.company_column_no_adj = " + $in.0.column_number + ";";

	$out.0.sql = sql;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Create Update Data SQL" guiX="226" guiY="525" id="CREATE_UPDATE_DATA_SQL" type="REFORMAT">
<attr name="transform"><![CDATA[// Transforms input record into output record.
function integer transform() {
	string sql = "";	
	sql = sql + "update ${REPORT_MATRIX_TABLENAME} mtx ";
	sql = sql + "set c" + $in.0.column_number + " = cast(cast(round(s.wage_hourly_cola,2) as numeric(36,2)) as varchar(8)) ";
	sql = sql + "from ${TABLE_COMPANY_ID_REMAPPED} r ";
	//sql = sql + "join ${TABLE_COMPANY_COLUMN} c on c.ticker = r.ticker ";
	sql = sql + "join ${TABLE_COMPANY_JOB_DATA} cjd on cjd.ticker = r.ticker_2 ";
	sql = sql + "join ${TABLE_WAGE_SUMMARY} s on s.ticker = r.ticker_2 and s.joc = cjd.joc ";
	sql = sql + "where mtx.description = cjd.joc and ";
	sql = sql + "  r.ticker = mtx.ticker and ";
	sql = sql + "  mtx.row_type = 'CO_DATA' and ";
	sql = sql + "  r.company_column_no_adj = " + $in.0.column_number + ";";
	
	$out.0.sql = sql;

	return ALL;
}]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Read Columns" guiX="-4" guiY="477" id="READ_COLUMNS" type="DB_INPUT_TABLE">
<attr name="sqlQuery"><![CDATA[select $column_number:=column_number
from ${TABLE_COLUMN_NUMBER}
order by column_number;]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update Column Header" guiX="471" guiY="435" id="UPDATE_COLUMN_HEADER" type="DB_EXECUTE" url="port:$0.sql:discrete"/>
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update Data" guiX="487" guiY="525" id="UPDATE_DATA" type="DB_EXECUTE" url="port:$0.sql:discrete"/>
<Edge fromNode="CREATE_UPDATE_COLUMN_HEADER_SQL:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (input parameters)" metadata="Metadata1" outPort="Port 0 (out)" toNode="UPDATE_COLUMN_HEADER:0"/>
<Edge fromNode="CREATE_UPDATE_DATA_SQL:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (input parameters)" metadata="Metadata1" outPort="Port 0 (out)" toNode="UPDATE_DATA:0"/>
<Edge fromNode="READ_COLUMNS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="CREATE_UPDATE_COLUMN_HEADER_SQL:0"/>
<Edge fromNode="READ_COLUMNS:1" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 1 (out)" toNode="CREATE_UPDATE_DATA_SQL:0"/>
</Phase>
<Phase number="4">
<Node enabled="enabled" graphName="${GRAPH_DIR}/wage-analysis/report/fairpay/FairPayGenerateReports.grf" guiName="Run GenerateReports" guiX="238" guiY="610" id="RUN_GENERATE_REPORTS" type="RUN_GRAPH"/>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="disabled" guiName="Drop Temp Col Numbers Table" guiX="382" guiY="734" id="DROP_TEMP_COL_NUMBERS_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${TABLE_COLUMN_NUMBER};]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="disabled" guiName="Drop Temp Company Ids Remapped Table" guiX="99" guiY="734" id="DROP_TEMP_COMPANY_IDS_REMAPPED_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[drop table if exists ${COMPANY_IDS_REMAPPED_TABLENAME};]]></attr>
</Node>
</Phase>
</Graph>
