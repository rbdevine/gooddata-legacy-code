<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Thu Sep 22 10:24:29 EDT 2016" description="This massages the original fair pay data sources into a smaller, more managable table to&#10;act as the data source for later, more coplex queries to generate reports.&#10;&#10;At the time of this writing, only glassdoor data is being used, but we could add other &#10;sources later.&#10;&#10;In additoin to creating the lookup table, it also cleans up a few issues with fips matching&#10;and adds some titles (e..g., software engineer 3 - 5 years)" guiVersion="3.4.4.P" id="1474554360353" licenseType="Commercial" modified="Sat May 13 18:50:56 EDT 2017" modifiedBy="hankmobley" name="FairPayGenerateLookupTables" revision="1.268" showComponentDetails="true">
<Global>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="TMP_TABLE_FIPS_DATA_VALID_COLI" value="${TMP_BASE}_FIPS_DATA_VALID_COLI"/>
<Property id="GraphParameter1" name="TMP_TABLE_TICKER_COMPANY_NAME" value="${TMP_BASE}_TICKER_COMPANY_NAME"/>
<Property fileURL="wage.prm" id="GraphParameter2"/>
<Property fileURL="wage-staging.prm" id="GraphParameter20"/>
<Property fileURL="workspace.prm" id="GraphParameter36"/>
<Dictionary/>
</Global>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update Marriott Maintenance" guiX="45" guiY="12" id="UPDATE_MARRIOTT_MAINTENANCE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[/*
  Since Marriott data was included in the original
  dataset, the franchise jobtitle/goc mappings were
  not applied. For now, just making an exeception
  for that case (specifically with maintenance titles). 
  Perhaps in the future we can implement a more general case. 
*/
SET LOCALE to LEN_S1;
update ${SALARY_LOOKUP_TABLENAME} s
set goc = u.goc
from ${FRANCHISE_JOBTITLE_TO_GOC_TABLENAME} u
where u.jobtitle = s.jobtitle and s.ticker = 'MAR' and u.jobtitle like 'main%';]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update Job Names" guiX="68" guiY="89" id="UPDATE_JOB_NAMES1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[/*
  update ${SALARY_LOOKUP_TABLENAME} to modify goc for various
  job titles. Basically, what we did was first generate a list
  of all glassdoor entries that included the word software or
  assistant. Then Andy S. and Rich D. went through all 4000+ entries 
  and set appropriate goc for given job title, the idea being we should get
  more job titles that way. Finally, created a Good Data graph to
  upload that jobtitle->goc data into the table, LKP_GD_JOBTITLE_OVERRIDE_GOC
*/
update ${SALARY_LOOKUP_TABLENAME} s
set goc = u.goc
from LKP_GD_JOBTITLE_OVERRIDE_GOC u
where u.jobtitle = s.jobtitle;]]></attr>
</Node>
</Phase>
<Phase number="6">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update Franchise GOC Special Cases" guiX="25" guiY="165" id="UPDATE_FRANCHISE_GOC_SPECIAL_CASES" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[/*
  update ${SALARY_LOOKUP_TABLENAME} to change gocs for specific
  franchises. The idea is to combine certain gocs for certain
  tickers. (For example, for LBTY, we combined 'general manager'
  and 'manager' under the goc 'general manager').
*/
update ${SALARY_LOOKUP_TABLENAME} s
set goc = u.new_goc
from ${FRANCHISE_GOC_EXCEPTIONS_TABLENAME} u
where u.old_goc = s.goc and u.ticker = s.ticker;]]></attr>
</Node>
</Phase>
<Phase number="7">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Apply GOC Salary Multipliers" guiX="47" guiY="243" id="APPLY_GOC_SALARY_MULTIPLIERS" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[update ${SALARY_LOOKUP_TABLENAME} s
  set unadjustedbasesalary = multiplier * unadjustedbasesalary,
    unadjustedtotalsalary = multiplier * unadjustedtotalsalary,
    unadjustedbasesalary_cola = multiplier * unadjustedbasesalary_cola,
    unadjustedtotalsalary_cola = multiplier * unadjustedtotalsalary_cola,
    unadjustedbasehourly = multiplier * unadjustedbasehourly,
    unadjustedtotalhourly = multiplier * unadjustedtotalhourly,
    unadjustedbasehourly_cola = multiplier * unadjustedbasehourly_cola,
    unadjustedtotalhourly_cola = multiplier * unadjustedtotalhourly_cola
from ${GOC_SALARY_MULTIPLIERS_TABLENAME} m
where m.goc = s.goc and m.ticker = s.ticker;]]></attr>
</Node>
</Phase>
<Phase number="8">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Add Job Levels" guiX="78" guiY="319" id="ADD_JOB_LEVELS" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[/*
  update ${SALARY_LOOKUP_TABLENAME} to modify goc by level, given years of experience,
  see above for further explanation.
*/
update ${SALARY_LOOKUP_TABLENAME} s
set goc = l.goc_with_level
from ${TABLE_JOB_LEVEL} l
where
  s.goc = l.goc and (
    (MIN_YEARS_EXPERIENCE is null and MAX_YEARS_EXPERIENCE is not null and s.YEARSOFRELEVANTEXPNUMBER <= MAX_YEARS_EXPERIENCE) or
    (MIN_YEARS_EXPERIENCE is not null and s.YEARSOFRELEVANTEXPNUMBER > MIN_YEARS_EXPERIENCE and MAX_YEARS_EXPERIENCE is null) or
    (MIN_YEARS_EXPERIENCE is not null and s.YEARSOFRELEVANTEXPNUMBER > MIN_YEARS_EXPERIENCE and MAX_YEARS_EXPERIENCE is not null and s.YEARSOFRELEVANTEXPNUMBER <= MAX_YEARS_EXPERIENCE)
  );
]]></attr>
</Node>
</Phase>
<Phase number="9">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Update H1B Names" guiX="73" guiY="400" id="UPDATE_H1B_NAMES" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[SET LOCALE to LEN_S1;

update ${SALARY_LOOKUP_TABLENAME}
set goc = 'software engineer h1b'
where goc = 'software engineer' and data_type_id = 1;]]></attr>
</Node>
</Phase>
</Graph>
