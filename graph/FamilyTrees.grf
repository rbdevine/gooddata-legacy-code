<?xml version="1.0" encoding="UTF-8"?><Graph author="scalvillo" created="Fri Jun 10 20:56:50 EDT 2016" guiVersion="3.4.4.P" id="1466014046265" licenseType="Commercial" modified="Mon Aug 01 22:01:14 EDT 2016" modifiedBy="scalvillo" name="Complete County File" revision="1.157" showComponentDetails="true">
<Global>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="FamilyTrees_DB" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field label="Company Name" name="Company_Name" type="string"/>
<Field label="D-U-N-S Number" name="DUNS_Number" type="string"/>
<Field label="Immediate Parent" name="Immediate_Parent" type="string"/>
<Field label="Immediate Parent D-U-N-S" name="Immediate_Parent_DUNS" type="string"/>
<Field label="Ultimate Parent" name="Ultimate_Parent" type="string"/>
<Field label="Ultimate Parent D-U-N-S" name="Ultimate_Parent_DUNS" type="string"/>
<Field label="Contact Prefix" name="Contact_Prefix" type="string"/>
<Field label="Contact First Name" name="Contact_First_Name" type="string"/>
<Field label="Contact Last Name" name="Contact_Last_Name" type="string"/>
<Field label="Contact Suffix" name="Contact_Suffix" type="string"/>
<Field label="Contact Title" name="Contact_Title" type="string"/>
<Field label="Country Phone Code" name="Country_Phone_Code" type="string"/>
<Field label="Phone Number" name="Phone_Number" type="string"/>
<Field label="Toll-Free Country Code" name="Toll_Free_Country_Code" type="string"/>
<Field label="Toll-Free Number" name="Toll_Free_Number" type="string"/>
<Field label="FAX Country Code" name="FAX_Country_Code" type="string"/>
<Field label="FAX Number" name="FAX_Number" type="string"/>
<Field label="Mailing Address 1" name="Mailing_Address_1" type="string"/>
<Field label="Mailing Address 2" name="Mailing_Address_2" type="string"/>
<Field label="Mailing City" name="Mailing_City" type="string"/>
<Field label="Mailing State" name="Mailing_State" type="string"/>
<Field label="Mailing Zip" name="Mailing_Zip" type="string"/>
<Field label="Mailing Zip Extension" name="Mailing_Zip_Extension" type="string"/>
<Field label="Mailing Country" name="Mailing_Country" type="string"/>
<Field label="Primary Address 1" name="Primary_Address_1" type="string"/>
<Field label="Primary Address 2" name="Primary_Address_2" type="string"/>
<Field label="Primary City" name="Primary_City" type="string"/>
<Field label="Primary State" name="Primary_State" type="string"/>
<Field label="Primary Zip" name="Primary_Zip" type="string"/>
<Field label="Primary Zip Extension" name="Primary_Zip_Extension" type="string"/>
<Field label="Primary Country" name="Primary_Country" type="string"/>
<Field label="Line Of Business" name="Line_Of_Business" type="string"/>
<Field label="Doing Business As" name="Doing_Business_As" type="string"/>
<Field label="Company Type" name="Company_Type" type="string"/>
<Field label="Is Subsidiary" name="Is_Subsidiary" type="string"/>
<Field label="Location Type" name="Location_Type" type="string"/>
<Field label="Exchange" name="Exchange" type="string"/>
<Field label="Symbol" name="Symbol" type="string"/>
<Field label="Latitude" name="Latitude" type="string"/>
<Field label="Longitude" name="Longitude" type="string"/>
<Field label="Revenue (US Dollars, million)" name="Revenue_US_Dollars_million" type="string"/>
<Field label="Net Income (US Dollars, million)" name="Net_Income_US_Dollars_million" type="string"/>
<Field label="Total Employees" name="Total_Employees" type="string"/>
<Field label="Employees At This Location" name="Employees_At_This_Location" type="string"/>
<Field label="Primary Industry" name="Primary_Industry" type="string"/>
<Field label="Primary US SIC Code" name="Primary_US_SIC_Code" type="string"/>
<Field label="Primary US NAICS Code" name="Primary_US_NAICS_Code" type="string"/>
<Field label="Web Address " name="Web_Address" type="string"/>
<Field label="Facility Size (sq.Ft)" name="Facility_Size_sq_Ft" type="string"/>
<Field label="Marketable?" name="Marketable" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0">
<Record fieldDelimiter="," name="FamilyTrees_File" recordDelimiter="\n" type="delimited">
<Field label="Company Name" name="Company_Name" type="string"/>
<Field label="D-U-N-S Number" name="DUNS_Number" type="string"/>
<Field label="Immediate Parent" name="Immediate_Parent" type="string"/>
<Field label="Immediate Parent D-U-N-S" name="Immediate_Parent_DUNS" type="string"/>
<Field label="Ultimate Parent" name="Ultimate_Parent" type="string"/>
<Field label="Ultimate Parent D-U-N-S" name="Ultimate_Parent_DUNS" type="string"/>
<Field label="Contact Prefix" name="Contact_Prefix" type="string"/>
<Field label="Contact First Name" name="Contact_First_Name" type="string"/>
<Field label="Contact Last Name" name="Contact_Last_Name" type="string"/>
<Field label="Contact Suffix" name="Contact_Suffix" type="string"/>
<Field label="Contact Title" name="Contact_Title" type="string"/>
<Field label="Country Phone Code" name="Country_Phone_Code" type="string"/>
<Field label="Phone Number" name="Phone_Number" type="string"/>
<Field label="Toll-Free Country Code" name="Toll_Free_Country_Code" type="string"/>
<Field label="Toll-Free Number" name="Toll_Free_Number" type="string"/>
<Field label="FAX Country Code" name="FAX_Country_Code" type="string"/>
<Field label="FAX Number" name="FAX_Number" type="string"/>
<Field label="Mailing Address 1" name="Mailing_Address_1" type="string"/>
<Field label="Mailing Address 2" name="Mailing_Address_2" type="string"/>
<Field label="Mailing City" name="Mailing_City" type="string"/>
<Field label="Mailing State" name="Mailing_State" type="string"/>
<Field label="Mailing Zip" name="Mailing_Zip" type="string"/>
<Field label="Mailing Zip Extension" name="Mailing_Zip_Extension" type="string"/>
<Field label="Mailing Country" name="Mailing_Country" type="string"/>
<Field label="Primary Address 1" name="Primary_Address_1" type="string"/>
<Field label="Primary Address 2" name="Primary_Address_2" type="string"/>
<Field label="Primary City" name="Primary_City" type="string"/>
<Field label="Primary State" name="Primary_State" type="string"/>
<Field label="Primary Zip" name="Primary_Zip" type="string"/>
<Field label="Primary Zip Extension" name="Primary_Zip_Extension" type="string"/>
<Field label="Primary Country" name="Primary_Country" type="string"/>
<Field label="Line Of Business" name="Line_Of_Business" type="string"/>
<Field label="Doing Business As" name="Doing_Business_As" type="string"/>
<Field label="Company Type" name="Company_Type" type="string"/>
<Field label="Is Subsidiary" name="Is_Subsidiary" type="string"/>
<Field label="Location Type" name="Location_Type" type="string"/>
<Field label="Exchange" name="Exchange" type="string"/>
<Field label="Symbol" name="Symbol" type="string"/>
<Field label="Latitude" name="Latitude" type="string"/>
<Field label="Longitude" name="Longitude" type="string"/>
<Field label="Revenue (US Dollars, million)" name="Revenue_US_Dollars_million" type="string"/>
<Field label="Net Income (US Dollars, million)" name="Net_Income_US_Dollars_million" type="string"/>
<Field label="Total Employees" name="Total_Employees" type="string"/>
<Field label="Employees At This Location" name="Employees_At_This_Location" type="string"/>
<Field label="Primary Industry" name="Primary_Industry" type="string"/>
<Field label="Primary US SIC Code" name="Primary_US_SIC_Code" type="string"/>
<Field label="Primary US NAICS Code" name="Primary_US_NAICS_Code" type="string"/>
<Field label="Web Address " name="Web_Address" type="string"/>
<Field label="Facility Size (sq.Ft)" name="Facility_Size_sq_Ft" type="string"/>
<Field label="Marketable?" name="Marketable" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata5" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="FIPS_Record" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="block_fips" type="string"/>
<Field name="county_fips" type="string"/>
<Field name="county_name" type="string"/>
<Field name="state_fips" type="string"/>
<Field name="state_code" type="string"/>
<Field name="state_name" type="string"/>
<Field name="latitude" type="string"/>
<Field name="longitude" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," name="FIPS_Request" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="latitude" type="string"/>
<Field delimiter="\n" name="longitude" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata4" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="FIPS_Response" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="response" type="string"/>
<Field name="latitude" type="string"/>
<Field name="longitude" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata9" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="FIPS_Response_Combined" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="response" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/dnb/famTrees/*.xls"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/familytreescombinederrors.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/*.xls"/>
<Property id="GraphParameter3" name="TABLENAME" value="STG_FAMILYTREES"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter18" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/familytreescombined.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="286" guiY="28" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" guiName="Reformat" guiX="286" guiY="120" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
// Transforms input record into output record.
function integer transform() {
	if($in.0.Company_Name != null ) 
	{
		$out.0.Company_Name = trim(replace($in.0.Company_Name,"[||\\\\]",","));
	}
	else
	{
		$out.0.Company_Name = $in.0.Company_Name;
	}
	$out.0.DUNS_Number = $in.0.DUNS_Number;
	$out.0.Immediate_Parent = $in.0.Immediate_Parent;
	$out.0.Immediate_Parent_DUNS = $in.0.Immediate_Parent_DUNS;
	$out.0.Ultimate_Parent = $in.0.Ultimate_Parent;
	$out.0.Ultimate_Parent_DUNS = $in.0.Ultimate_Parent_DUNS;
	$out.0.Contact_Prefix = $in.0.Contact_Prefix;
	$out.0.Contact_First_Name = $in.0.Contact_First_Name;
	$out.0.Contact_Last_Name = $in.0.Contact_Last_Name;
	$out.0.Contact_Suffix = $in.0.Contact_Suffix;
	$out.0.Contact_Title = $in.0.Contact_Title;
	$out.0.Country_Phone_Code = $in.0.Country_Phone_Code;
	$out.0.Phone_Number = $in.0.Phone_Number;
	$out.0.Toll_Free_Country_Code = $in.0.Toll_Free_Country_Code;
	$out.0.Toll_Free_Number = $in.0.Toll_Free_Number;
	$out.0.FAX_Country_Code = $in.0.FAX_Country_Code;
	$out.0.FAX_Number = $in.0.FAX_Number;
	$out.0.Mailing_Address_1 = $in.0.Mailing_Address_1;
	$out.0.Mailing_Address_2 = $in.0.Mailing_Address_2;
	$out.0.Mailing_City = $in.0.Mailing_City;
	$out.0.Mailing_State = $in.0.Mailing_State;
	$out.0.Mailing_Zip = $in.0.Mailing_Zip;
	$out.0.Mailing_Zip_Extension = $in.0.Mailing_Zip_Extension;
	$out.0.Mailing_Country = $in.0.Mailing_Country;
	$out.0.Primary_Address_1 = $in.0.Primary_Address_1;
	$out.0.Primary_Address_2 = $in.0.Primary_Address_2;
	$out.0.Primary_City = $in.0.Primary_City;
	$out.0.Primary_State = $in.0.Primary_State;
	$out.0.Primary_Zip = $in.0.Primary_Zip;
	$out.0.Primary_Zip_Extension = $in.0.Primary_Zip_Extension;
	$out.0.Primary_Country = $in.0.Primary_Country;
	$out.0.Line_Of_Business = $in.0.Line_Of_Business;
	if($in.0.Doing_Business_As != null ) 
	{
		$out.0.Doing_Business_As = replace($in.0.Doing_Business_As,"[||\\\\]",",");
	}
	else
	{
		$out.0.Doing_Business_As = $in.0.Doing_Business_As;
	}
	$out.0.Company_Type = $in.0.Company_Type;
	$out.0.Is_Subsidiary = $in.0.Is_Subsidiary;
	$out.0.Location_Type = $in.0.Location_Type;
	$out.0.Exchange = $in.0.Exchange;
	$out.0.Symbol = $in.0.Symbol;
	$out.0.Latitude = $in.0.Latitude;
	$out.0.Longitude = $in.0.Longitude;
	$out.0.Revenue_US_Dollars_million = $in.0.Revenue_US_Dollars_million;
	$out.0.Net_Income_US_Dollars_million = $in.0.Net_Income_US_Dollars_million;
	$out.0.Total_Employees = $in.0.Total_Employees;
	$out.0.Employees_At_This_Location = $in.0.Employees_At_This_Location;
	$out.0.Primary_Industry = $in.0.Primary_Industry;
	$out.0.Primary_US_SIC_Code = $in.0.Primary_US_SIC_Code;
	$out.0.Primary_US_NAICS_Code = $in.0.Primary_US_NAICS_Code;
	$out.0.Web_Address = $in.0.Web_Address;
	$out.0.Facility_Size_sq_Ft = $in.0.Facility_Size_sq_Ft;
	$out.0.Marketable = $in.0.Marketable;
	
	if ($in.0.Latitude != null)
	{	
		$out.1.latitude = trim($in.0.Latitude);
	}
	else
	{
		$out.1.latitude = "";
	}
	
	if ($in.0.Longitude != null)
	{	
		$out.1.longitude = trim($in.0.Longitude);
	}
	else
	{
		$out.1.longitude = "";
	}
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="SpreadsheetDataReader" guiX="71" guiY="118" id="SPREADSHEET_DATA_READER" skipSourceRecords="1" type="SPREADSHEET_READER"/>
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="Write Industry File" guiX="459" guiY="118" id="WRITE_INDUSTRY_FILE" type="DATA_WRITER"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="WRITE_INDUSTRY_FILE:0"/>
<Edge fromNode="REFORMAT:1" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 1 (out)" toNode="EXT_FILTER:0"/>
<Edge fromNode="SPREADSHEET_DATA_READER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge6" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="DROP TABLE" guiX="108" guiY="422" id="DROP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="CREATE TABLE" guiX="285" guiY="422" id="CREATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
	COMPANY_NAME VARCHAR(255),
	DUNS_NUMBER VARCHAR(255),
	IMMEDIATE_PARENT VARCHAR(255),
	IMMEDIATE_PARENT_DUNS VARCHAR(255),
	ULTIMATE_PARENT VARCHAR(255),
	ULTIMATE_PARENT_DUNS VARCHAR(255),
	CONTACT_PREFIX VARCHAR(255),
	CONTACT_FIRST_NAME VARCHAR(255),
	CONTACT_LAST_NAME VARCHAR(255),
	CONTACT_SUFFIX VARCHAR(255),
	CONTACT_TITLE VARCHAR(255),
	COUNTRY_PHONE_CODE VARCHAR(255),
	PHONE_NUMBER VARCHAR(255),
	TOLL_FREE_COUNTRY_CODE VARCHAR(255),
	TOLL_FREE_NUMBER VARCHAR(255),
	FAX_COUNTRY_CODE VARCHAR(255),
	FAX_NUMBER VARCHAR(255),
	MAILING_ADDRESS_1 VARCHAR(255),
	MAILING_ADDRESS_2 VARCHAR(255),
	MAILING_CITY VARCHAR(255),
	MAILING_STATE VARCHAR(255),
	MAILING_ZIP VARCHAR(255),
	MAILING_ZIP_EXTENSION VARCHAR(255),
	MAILING_COUNTRY VARCHAR(255),
	PRIMARY_ADDRESS_1 VARCHAR(255),
	PRIMARY_ADDRESS_2 VARCHAR(255),
	PRIMARY_CITY VARCHAR(255),
	PRIMARY_STATE VARCHAR(255),
	PRIMARY_ZIP VARCHAR(255),
	PRIMARY_ZIP_EXTENSION VARCHAR(255),
	PRIMARY_COUNTRY VARCHAR(255),
	LINE_OF_BUSINESS VARCHAR(255),
	DOING_BUSINESS_AS VARCHAR(255),
	COMPANY_TYPE VARCHAR(255),
	IS_SUBSIDIARY VARCHAR(255),
	LOCATION_TYPE VARCHAR(255),
	EXCHANGE VARCHAR(255),
	SYMBOL VARCHAR(255),
	LATITUDE VARCHAR(255),
	LONGITUDE VARCHAR(255),
	REVENUE_US_DOLLARS_MILLION VARCHAR(255),
	NET_INCOME_US_DOLLARS_MILLION VARCHAR(255),
	TOTAL_EMPLOYEES VARCHAR(255),
	EMPLOYEES_AT_THIS_LOCATION VARCHAR(255),
	PRIMARY_INDUSTRY VARCHAR(255),
	PRIMARY_US_SIC_CODE VARCHAR(255),
	PRIMARY_US_NAICS_CODE VARCHAR(255),
	WEB_ADDRESS VARCHAR(255),
	FACILITY_SIZE_SQ_FT VARCHAR(255),
	MARKETABLE VARCHAR(255)
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="POPULATE TABLE" guiX="462" guiY="422" id="POPULATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	COMPANY_NAME,
	DUNS_NUMBER,
	IMMEDIATE_PARENT,
	IMMEDIATE_PARENT_DUNS,
	ULTIMATE_PARENT,
	ULTIMATE_PARENT_DUNS,
	CONTACT_PREFIX,
	CONTACT_FIRST_NAME,
	CONTACT_LAST_NAME,
	CONTACT_SUFFIX,
	CONTACT_TITLE,
	COUNTRY_PHONE_CODE,
	PHONE_NUMBER,
	TOLL_FREE_COUNTRY_CODE,
	TOLL_FREE_NUMBER,
	FAX_COUNTRY_CODE,
	FAX_NUMBER,
	MAILING_ADDRESS_1,
	MAILING_ADDRESS_2,
	MAILING_CITY,
	MAILING_STATE,
	MAILING_ZIP,
	MAILING_ZIP_EXTENSION,
	MAILING_COUNTRY,
	PRIMARY_ADDRESS_1,
	PRIMARY_ADDRESS_2,
	PRIMARY_CITY,
	PRIMARY_STATE,
	PRIMARY_ZIP,
	PRIMARY_ZIP_EXTENSION,
	PRIMARY_COUNTRY,
	LINE_OF_BUSINESS,
	DOING_BUSINESS_AS,
	COMPANY_TYPE,
	IS_SUBSIDIARY,
	LOCATION_TYPE,
	EXCHANGE,
	SYMBOL,
	LATITUDE,
	LONGITUDE,
	REVENUE_US_DOLLARS_MILLION,
	NET_INCOME_US_DOLLARS_MILLION,
	TOTAL_EMPLOYEES,
	EMPLOYEES_AT_THIS_LOCATION,
	PRIMARY_INDUSTRY,
	PRIMARY_US_SIC_CODE,
	PRIMARY_US_NAICS_CODE,
	WEB_ADDRESS,
	FACILITY_SIZE_SQ_FT,
	MARKETABLE
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="6">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean download" guiX="108" guiY="502" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean error" guiX="285" guiY="502" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean write" guiX="463" guiY="502" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
<Phase number="7">
<Node enabled="enabled" guiName="Append Data" guiX="623" guiY="230" id="APPEND_DATA" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	string latlonjson = ", \"latitude\" : \""+$in.0.latitude+"\", \"longitude\" : \""+$in.0.longitude+"\" }";
	$out.0.response = substring($in.0.response,0,length($in.0.response)-1)+latlonjson;
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATA_TRANSFORM_DIR}/fipslookup.txt" guiName="CSV Writer" guiX="946" guiY="230" id="CSV_WRITER1" type="DATA_WRITER"/>
<Node dedupKey="latitude(a);longitude(a)" enabled="enabled" guiName="Dedup" guiX="324" guiY="230" id="DEDUP" type="DEDUP"/>
<Node enabled="enabled" guiName="ExtFilter" guiX="27" guiY="230" id="EXT_FILTER" type="EXT_FILTER">
<attr name="filterExpression"><![CDATA[//#CTL2
$in.0.latitude != ""]]></attr>
</Node>
<Node enabled="enabled" guiName="ExtSort" guiX="185" guiY="230" id="EXT_SORT" sortKey="latitude(a);longitude(a)" type="EXT_SORT"/>
<Node charset="UTF-8" ctlFunctionsSource="//#CTL2&#10;&#10;function map[string, string] generateRequestParameters(map[string, string] inputEdgeRecord, integer iterationNumber, integer lastResponseStatus, map[string, string]lastResponseHeaders, string lastResponseBody) {&#10;&#9;printLog(info, &quot;iterationNumber - - - &gt; &quot; + iterationNumber);&#10;    // Copy all input parameters into the request parameters map.&#10;    map[string, string] requestParams = inputEdgeRecord;&#10;&#10;    requestParams[&quot;latitude&quot;] = $in.0.latitude;&#10;    requestParams[&quot;longitude&quot;] = $in.0.longitude;&#10;    &#10;   &#10;    &#10;    return requestParams;&#10;}&#10;function integer transform() {&#10;&#9;&#10;&#9;printLog(info,'inside rest conector transform');&#10;&#9;&#10;&#9;&#10;&#9;$out.0.latitude = $in.0.latitude;&#10;&#9;$out.0.longitude = $in.0.longitude;&#10;&#9;return ALL;&#10;}&#10;function string checkResponse(integer responseStatus, map[string, string] responseHeaders, string responseBody) {&#10;&#9;&#10;&#9;printLog(info, &quot;responseBody - - - &gt; &quot; + responseBody);&#10;&#9; &#10;     if (responseStatus &gt;= 200  &amp;&amp;  responseStatus &lt; 300) {&#10;         return &quot;DONE_WITH_OUTPUT&quot;;&#10;     }&#10;     else if (responseStatus == 404) {&#10;     // HTTP status &quot;404 - NOT FOUND&quot; could mean there are no more pages or records&#10;         return &quot;DONE_NO_OUTPUT&quot;;&#10;    }&#10;     else if (responseStatus &gt;= 500 || responseBody.indexOf('{&quot;error&quot;: &quot;just a temporary error&quot;}') &gt; -1) {&#10;      // Internal server errors could be temporary (this sends the last response to the error output port)&#10;        return &quot;RETRY&quot;;&#10;     }&#10;     else {&#10;       // Otherwise abort the HTTP connector run (this sends the last response to the error output port)&#10;         return &quot;FATAL_ERROR&quot;;&#10;     }&#10;}&#10;&#10;&#10;function map[string, string] modifyRequestParamsBeforeRetryAttempt(map[string, string] failedRequestParams, integer retryNumber,&#10;        integer responseStatus, map[string, string] responseHeaders, string responseBody) {&#10;&#10;    // Copy all the previous parameters into the retry request parameters map.&#10;    map[string, string] modifiedRequestParams = failedRequestParams;&#10;&#10;   &#10;    return modifiedRequestParams;&#10;}" enabled="enabled" guiName="get fips" guiX="463" guiY="230" id="GET_FIPS" requestMethod="GET" type="GENERIC_REST_CONNECTOR">
<attr name="url"><![CDATA[http://data.fcc.gov/api/block/2010/find?format=json&showall=true&latitude=${latitude}&longitude=${longitude}]]></attr>
</Node>
<Node charset="UTF-8" enabled="enabled" fileURL="port:$0.response:discrete" guiName="Parse" guiX="785" guiY="230" id="PARSE" type="JSON_READER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<Context xpath="/root/object" outPort="0">
  <Mapping cloverField="block_fips" xpath="Block/FIPS"/>
  <Mapping cloverField="county_fips" xpath="County/FIPS"/>
  <Mapping cloverField="county_name" xpath="County/name"/>
  <Mapping cloverField="state_fips" xpath="State/FIPS"/>
  <Mapping cloverField="state_code" xpath="State/code"/>
  <Mapping cloverField="state_name" xpath="State/name"/>
  <Mapping cloverField="latitude" xpath="latitude"/>
  <Mapping cloverField="longitude" xpath="longitude"/>
  
  
</Context>

	]]></attr>
</Node>
<Edge fromNode="APPEND_DATA:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata9" outPort="Port 0 (out)" toNode="PARSE:0"/>
<Edge fromNode="DEDUP:0" guiBendpoints="" guiRouter="Manhattan" id="Edge12" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (unique)" toNode="GET_FIPS:0"/>
<Edge fromNode="EXT_FILTER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge10" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (accepted)" toNode="EXT_SORT:0"/>
<Edge fromNode="EXT_SORT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge11" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="DEDUP:0"/>
<Edge fromNode="GET_FIPS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata4" outPort="Port 0 (output)" toNode="APPEND_DATA:0"/>
<Edge fromNode="PARSE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata5" outPort="Port 0 (out)" toNode="CSV_WRITER1:0"/>
</Phase>
<Phase number="8">
<Node dbConnection="JDBC0" enabled="enabled" guiName="DROP TABLE" guiX="871" guiY="358" id="DROP_TABLE2" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS LKP_FIPS_COORDINATES_TMP;]]></attr>
</Node>
</Phase>
<Phase number="9">
<Node dbConnection="JDBC0" enabled="enabled" guiName="CREATE FIPS" guiX="785" guiY="545" id="CREATE_FIPS" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS LKP_FIPS_COORDINATES (
	BLOCK_FIPS VARCHAR(255),
	COUNTY_FIPS VARCHAR(255),
	COUNTY_NAME VARCHAR(255),
	STATE_FIPS VARCHAR(255),
	STATE_CODE VARCHAR(255),
	STATE_NAME VARCHAR(255),
	LATITUDE VARCHAR(255),
	LONGITUDE VARCHAR(255)
);]]></attr>
</Node>
<Node dbConnection="JDBC0" enabled="enabled" guiName="CREATE FIPS TMP" guiX="785" guiY="445" id="CREATE_FIPS_TMP" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS LKP_FIPS_COORDINATES_TMP (
	BLOCK_FIPS VARCHAR(255),
	COUNTY_FIPS VARCHAR(255),
	COUNTY_NAME VARCHAR(255),
	STATE_FIPS VARCHAR(255),
	STATE_CODE VARCHAR(255),
	STATE_NAME VARCHAR(255),
	LATITUDE VARCHAR(255),
	LONGITUDE VARCHAR(255)
);]]></attr>
</Node>
</Phase>
<Phase number="10">
<Node dbConnection="JDBC0" enabled="enabled" guiName="POPULATE FIPS_TMP" guiX="946" guiY="445" id="POPULATE_FIPS_TMP" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY LKP_FIPS_COORDINATES_TMP (
	BLOCK_FIPS,
	COUNTY_FIPS,
	COUNTY_NAME,
	STATE_FIPS,
	STATE_CODE,
	STATE_NAME,
	LATITUDE,
	LONGITUDE
)
FROM LOCAL '${DATA_TRANSFORM_DIR}/fipslookup.txt'
EXCEPTIONS '${DATA_TMP_DIR}/fipslookuperror.txt'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="11">
<Node dbConnection="JDBC0" enabled="enabled" guiName="UPDATE FIPS" guiX="956" guiY="545" id="UPDATE_FIPS" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[INSERT INTO LKP_FIPS_COORDINATES SELECT
	BLOCK_FIPS,
	COUNTY_FIPS,
	COUNTY_NAME,
	STATE_FIPS,
	STATE_CODE,
	STATE_NAME,
	LATITUDE,
	LONGITUDE

FROM LKP_FIPS_COORDINATES_TMP WHERE NOT EXISTS

(SELECT 1 FROM LKP_FIPS_COORDINATES MAIN  WHERE 
MAIN.BLOCK_FIPS = LKP_FIPS_COORDINATES_TMP.BLOCK_FIPS AND
MAIN.COUNTY_FIPS = LKP_FIPS_COORDINATES_TMP.COUNTY_FIPS AND
MAIN.COUNTY_NAME = LKP_FIPS_COORDINATES_TMP.COUNTY_NAME AND
MAIN.STATE_FIPS = LKP_FIPS_COORDINATES_TMP.STATE_FIPS AND
MAIN.STATE_CODE = LKP_FIPS_COORDINATES_TMP.STATE_CODE AND
MAIN.STATE_NAME = LKP_FIPS_COORDINATES_TMP.STATE_NAME AND
MAIN.LATITUDE = LKP_FIPS_COORDINATES_TMP.LATITUDE AND
MAIN.LONGITUDE = LKP_FIPS_COORDINATES_TMP.LONGITUDE) AND
LKP_FIPS_COORDINATES_TMP.COUNTY_FIPS IS NOT NULL
;
]]></attr>
</Node>
</Phase>
</Graph>
