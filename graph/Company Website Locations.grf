<?xml version="1.0" encoding="UTF-8"?><Graph author="scalvillo" created="Fri Jun 10 20:56:50 EDT 2016" guiVersion="3.4.4.P" id="1466014046265" licenseType="Commercial" modified="Thu Aug 25 02:23:56 EDT 2016" modifiedBy="scalvillo" name="Complete County File" revision="1.227" showComponentDetails="true">
<Global>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="CO_WEBSITE_LOCATION_READ" recordDelimiter="\n" type="delimited">
<Field format="" label="TICKER" name="TICKER" type="string"/>
<Field format="" label="CITY" name="CITY" type="string"/>
<Field format="" label="STATE" name="STATE" type="string"/>
<Field label="DESCRIPTION" name="DESCRIPTION" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="CO_WEBSITE_LOCATION_WRITE" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field label="TICKER" name="TICKER" type="string"/>
<Field label="CITY" name="CITY" type="string"/>
<Field label="STATE" name="STATE" type="string"/>
<Field label="DESCRIPTION" name="DESCRIPTION" type="string"/>
<Field name="JUST_TICKER" type="string"/>
<Field name="JUST_CITY_NAME" type="string"/>
<Field name="JUST_COUNTY_NAME" type="string"/>
<Field name="JUST_STATE_ABBREV" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/companywebsites/locations/LocationsMasterFinal.xlsx"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/cowebsiteslocationserror.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/LocationsMasterFinal.xlsx"/>
<Property id="GraphParameter3" name="TABLENAME" value="STG_COWEBSITELOCATIONS"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter18" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/cowebsitelocations.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="280" guiY="27" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="474" guiY="129" id="CSV_WRITER" quotedStrings="false" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="Read File" guiX="63" guiY="129" id="READ_FILE" type="SPREADSHEET_READER"/>
<Node enabled="enabled" guiName="Reformat" guiX="280" guiY="129" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	if($in.0.TICKER != null) {
		$out.0.TICKER = trim($in.0.TICKER);
	}
	if($in.0.CITY != null) {
		$out.0.CITY = trim($in.0.CITY);
	}
	if($in.0.STATE != null) {
		$out.0.STATE = trim($in.0.STATE);
	}
	if($in.0.DESCRIPTION != null) {
		$out.0.DESCRIPTION = trim($in.0.DESCRIPTION);
	}
	
	// special handling for ticker, city and state.  we define additonal fields to hold values 
	// necessary for joining
	if($in.0.TICKER != null) {
		$out.0.JUST_TICKER = upperCase(trim($in.0.TICKER));
	}
	if ($in.0.CITY != null) {
		string city = upperCase(trim($in.0.CITY));
		//some cities are actually counties
		$out.0.JUST_COUNTY_NAME = city;
		// we set city regardless just in case its a city name with the word county in it.
		$out.0.JUST_CITY_NAME = city;
	}
	if ($in.0.STATE != null) {
		$out.0.JUST_STATE_ABBREV = upperCase(trim($in.0.STATE));
	}

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="READ_FILE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="DROP TABLE" guiX="63" guiY="245" id="DROP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="CREATE TABLE" guiX="280" guiY="245" id="CREATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
	TICKER VARCHAR(255),
	CITY VARCHAR(255),
	STATE VARCHAR(255),
	DESCRIPTION VARCHAR(255),
	JUST_TICKER VARCHAR(255),
	JUST_CITY_NAME VARCHAR(255),
	JUST_COUNTY_NAME VARCHAR(255),
	JUST_STATE_ABBREV VARCHAR(255)
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="POPULATE TABLE" guiX="473" guiY="245" id="POPULATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	TICKER,
	CITY,
	STATE,
	DESCRIPTION,
	JUST_TICKER,
	JUST_CITY_NAME,
	JUST_COUNTY_NAME,
	JUST_STATE_ABBREV
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean download" guiX="63" guiY="334" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean error" guiX="280" guiY="334" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean write" guiX="474" guiY="334" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
</Graph>
