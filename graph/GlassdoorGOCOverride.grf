<?xml version="1.0" encoding="UTF-8"?><Graph author="hankmobley" created="Mon Aug 29 23:24:25 EDT 2016" description="Create lookup table for manually overriding glassdoor goc values for specified glassdoor job titles." guiVersion="3.4.4.P" id="1472527520111" licenseType="Commercial" modified="Wed Aug 31 15:40:43 EDT 2016" modifiedBy="hankmobley" name="GDGOCOverride" revision="1.29" showComponentDetails="true">
<Global>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="JobTitle_To_GOC_DB" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="jobtitle" type="string"/>
<Field name="goc" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="JobTitle_To_GOC_File" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="jobtitle" type="string"/>
<Field name="goc" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/justcustom/adjustments/glassdoor/jobtitle-to-goc.xlsx"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/jobtitletogocerror.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/jobtitle-to-goc.xlsx"/>
<Property id="GraphParameter3" name="TABLENAME" value="LKP_GD_JOBTITLE_OVERRIDE_GOC"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter18" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/jobtitletogoc.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="266" guiY="25" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="443" guiY="119" id="CSV_WRITER" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${READFILEPATH}" guiName="Read File" guiX="81" guiY="119" id="READ_FILE" type="SPREADSHEET_READER"/>
<Node enabled="enabled" guiName="Reformat" guiX="266" guiY="119" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.jobtitle = $in.0.jobtitle;
	$out.0.goc = $in.0.goc;
	
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="READ_FILE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Drop Table" guiX="81" guiY="213" id="DROP_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Create Table" guiX="266" guiY="213" id="CREATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
  JOBTITLE VARCHAR(255),
  GOC VARCHAR(255)
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Populate Table" guiX="443" guiY="213" id="POPULATE_TABLE" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	JOBTITLE,
	GOC
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node dbConnection="JDBC0" enabled="enabled" guiName="Clean Up Data" guiX="594" guiY="213" id="CLEAN_UP_DATA" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DELETE FROM ${TABLENAME} WHERE JOBTITLE IS NULL OR GOC IS NULL;]]></attr>
</Node>
</Phase>
<Phase number="6">
<Node baseURL="${READFILEPATH}" enabled="enabled" guiName="Clean Download" guiX="81" guiY="300" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean Error" guiX="266" guiY="300" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean Write" guiX="443" guiY="300" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
</Graph>
