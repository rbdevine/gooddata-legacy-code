<?xml version="1.0" encoding="UTF-8"?><Graph author="scalvillo" created="Fri Jun 10 20:56:50 EDT 2016" guiVersion="3.4.4.P" id="1466014046265" licenseType="Commercial" modified="Thu Jul 28 12:17:07 EDT 2016" modifiedBy="djbrown" name="Complete County File" revision="1.174" showComponentDetails="true">
<Global>
<Metadata id="Metadata9" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="aventiontest_DB" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field label="Company Name" name="Company_Name" type="string"/>
<Field label="Ultimate Parent Company" name="Ultimate_Parent_Company" type="string"/>
<Field label="Ticker" name="Ticker" type="string"/>
<Field label="Year Founded" name="Year_Founded" type="string"/>
<Field label="Address Line 1" name="Address_Line_1" type="string"/>
<Field label="City" name="City" type="string"/>
<Field label="State Or Province" name="State_Or_Province" type="string"/>
<Field label="Postal Code" name="Postal_Code" type="string"/>
<Field label="Country" name="Country" type="string"/>
<Field label="US Metropolitan Area" name="US_Metropolitan_Area" type="string"/>
<Field label="County" name="County" type="string"/>
<Field label="Employees" name="Employees" type="string"/>
<Field label="NAICS 2012 Code" name="NAICS_2012_Code" type="string"/>
<Field label="Avention Industry" name="Avention_Industry" type="string"/>
<Field label="Order" name="Order" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata8">
<Record fieldDelimiter="," name="aventiontest_File" recordDelimiter="\n" type="delimited">
<Field label="Company Name" name="Company_Name" type="string"/>
<Field label="Ultimate Parent Company" name="Ultimate_Parent_Company" type="string"/>
<Field label="Ticker" name="Ticker" type="string"/>
<Field label="Year Founded" name="Year_Founded" type="string"/>
<Field label="Address Line 1" name="Address_Line_1" type="string"/>
<Field label="City" name="City" type="string"/>
<Field label="State Or Province" name="State_Or_Province" type="string"/>
<Field label="Postal Code" name="Postal_Code" type="string"/>
<Field label="Country" name="Country" type="string"/>
<Field label="US Metropolitan Area" name="US_Metropolitan_Area" type="string"/>
<Field label="County" name="County" type="string"/>
<Field label="Employees" name="Employees" type="string"/>
<Field label="NAICS 2012 Code" name="NAICS_2012_Code" type="string"/>
<Field label="Avention Industry" name="Avention_Industry" type="string"/>
<Field label="Order" name="Order" type="string"/>
</Record>
</Metadata>
<Metadata id="UDR_ErrorPort">
<Record fieldDelimiter="|" name="CSV_Reader_ErrorPort" recordDelimiter="\n" type="delimited">
<Field name="recordNo" type="long"/>
<Field name="fieldNo" type="integer"/>
<Field name="originalData" type="string"/>
<Field name="errorMessage" type="string"/>
<Field name="fileURL" type="string"/>
</Record>
</Metadata>
<Connection database="DSS" dbURL="jdbc:dss://secure.gooddata.com/gdc/dss/instances/d68eb234fff8f2750cbf7dd02b20fd0e" id="JDBC0" jdbcSpecific="DSS" name="GOODDATA_DEV" password="justcapital1!" type="JDBC" user="ps-etl+justcapital_research@gooddata.com"/>
<Property id="GraphParameter0" name="DOWNLOADFILEPATH" value="https://${S3ACCESSKEY}:${S3SECRETKEY}@${S3BUCKETNAME}.s3.amazonaws.com/ranking/avention/aventionnew/*.csv&#10;"/>
<Property id="GraphParameter1" name="POPULATEERRORFILEPATH" value="${DATA_TMP_DIR}/aventionnewerrors.txt"/>
<Property id="GraphParameter2" name="READFILEPATH" value="${DATA_TMP_DIR}/*.csv"/>
<Property id="GraphParameter3" name="TABLENAME" value="STG_AVENTIONNEW"/>
<Property fileURL="workspace.prm" id="GraphParameter4"/>
<Property id="GraphParameter18" name="WRITEFILEPATH" value="${DATA_TRANSFORM_DIR}/aventionnew.txt"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node baseURL="${DOWNLOADFILEPATH}" destination="${DATA_TMP_DIR}" enabled="enabled" guiName="File Download" guiX="280" guiY="27" id="FILE_DOWNLOAD" type="FILE_DOWNLOAD"/>
</Phase>
<Phase number="1">
<Node charset="ISO-8859-1" dataPolicy="controlled" enabled="enabled" fileURL="${READFILEPATH}" guiName="CSV Reader" guiX="63" guiY="123" id="CSV_READER" quotedStrings="true" skipRows="1" trim="true" type="DATA_READER" verbose="true"/>
<Node enabled="enabled" fileURL="${WRITEFILEPATH}" guiName="CSV Writer" guiX="474" guiY="123" id="CSV_WRITER" quotedStrings="false" type="DATA_WRITER"/>
<Node enabled="enabled" fileURL="${DATA_TMP_DIR}/AventionNewReaderErrors.txt" guiName="CSV Writer" guiX="280" guiY="214" id="CSV_WRITER1" type="DATA_WRITER"/>
<Node enabled="enabled" guiName="Reformat" guiX="280" guiY="123" id="REFORMAT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.Company_Name = $in.0.Company_Name;
	$out.0.Ultimate_Parent_Company = $in.0.Ultimate_Parent_Company;
	$out.0.Ticker = $in.0.Ticker;
	$out.0.Year_Founded = $in.0.Year_Founded;
	$out.0.Address_Line_1 = $in.0.Address_Line_1;
	$out.0.City = $in.0.City;
	$out.0.State_Or_Province = $in.0.State_Or_Province;
	$out.0.Postal_Code = $in.0.Postal_Code;
	$out.0.Country = $in.0.Country;
	$out.0.US_Metropolitan_Area = $in.0.US_Metropolitan_Area;
	$out.0.County = $in.0.County;
	$out.0.Employees = $in.0.Employees;
	$out.0.NAICS_2012_Code = $in.0.NAICS_2012_Code;
	$out.0.Avention_Industry = $in.0.Avention_Industry;
	$out.0.Order = $in.0.Order;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="CSV_READER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata8" outPort="Port 0 (output)" toNode="REFORMAT:0"/>
<Edge fromNode="CSV_READER:1" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" metadata="UDR_ErrorPort" outPort="Port 1 (logs)" toNode="CSV_WRITER1:0"/>
<Edge fromNode="REFORMAT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata9" outPort="Port 0 (out)" toNode="CSV_WRITER:0"/>
</Phase>
<Phase number="2">
<Node dbConnection="JDBC0" enabled="enabled" guiName="DROP TABLE" guiX="63" guiY="326" id="DROP_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[DROP TABLE IF EXISTS ${TABLENAME};]]></attr>
</Node>
</Phase>
<Phase number="3">
<Node dbConnection="JDBC0" enabled="enabled" guiName="CREATE TABLE" guiX="280" guiY="326" id="CREATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[CREATE TABLE IF NOT EXISTS ${TABLENAME} (
	COMPANY_NAME VARCHAR(255),
	ULTIMATE_PARENT_COMPANY VARCHAR(255),
	TICKER VARCHAR(255),
	YEAR_FOUNDED VARCHAR(255),
	ADDRESS_LINE_1 VARCHAR(255),
	CITY VARCHAR(255),
	STATE_OR_PROVINCE VARCHAR(255),
	POSTAL_CODE VARCHAR(255),
	COUNTRY VARCHAR(255),
	US_METROPOLITAN_AREA VARCHAR(255),
	COUNTY VARCHAR(255),
	EMPLOYEES VARCHAR(255),
	NAICS_2012_CODE VARCHAR(255),
	AVENTION_INDUSTRY VARCHAR(255),
	"ORDER" VARCHAR(255)
);]]></attr>
</Node>
</Phase>
<Phase number="4">
<Node dbConnection="JDBC0" enabled="enabled" guiName="POPULATE TABLE" guiX="474" guiY="326" id="POPULATE_TABLE1" type="DB_EXECUTE">
<attr name="sqlQuery"><![CDATA[COPY ${TABLENAME} (
	COMPANY_NAME,
	ULTIMATE_PARENT_COMPANY,
	TICKER,
	YEAR_FOUNDED,
	ADDRESS_LINE_1,
	CITY,
	STATE_OR_PROVINCE,
	POSTAL_CODE,
	COUNTRY,
	US_METROPOLITAN_AREA,
	COUNTY,
	EMPLOYEES,
	NAICS_2012_CODE,
	AVENTION_INDUSTRY,
	"ORDER"
)
FROM LOCAL '${WRITEFILEPATH}'
EXCEPTIONS '${POPULATEERRORFILEPATH}'
ABORT ON ERROR;]]></attr>
</Node>
</Phase>
<Phase number="5">
<Node baseURL="${READFILEPATH}" enabled="disabled" guiName="Clean download" guiX="63" guiY="421" id="CLEAN_DOWNLOAD" type="FILE_DELETE"/>
<Node baseURL="${POPULATEERRORFILEPATH}" enabled="enabled" guiName="Clean error" guiX="280" guiY="421" id="CLEAN_ERROR" type="FILE_DELETE"/>
<Node baseURL="${WRITEFILEPATH}" enabled="enabled" guiName="Clean write" guiX="474" guiY="421" id="CLEAN_WRITE" type="FILE_DELETE"/>
</Phase>
</Graph>
